<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Javier G. Sogo's blog</title><link href="https://jgsogo.es/" rel="alternate"></link><link href="https://jgsogo.es/feeds/all.atom.xml" rel="self"></link><id>https://jgsogo.es/</id><updated>2021-01-19T10:30:00+01:00</updated><entry><title>Webassembly, OpenGL y Qt - Un cubo interactivo en la web</title><link href="https://jgsogo.es/emscripten-cube.html" rel="alternate"></link><published>2021-01-19T10:30:00+01:00</published><updated>2021-01-19T10:30:00+01:00</updated><author><name>Javier G. Sogo</name></author><id>tag:jgsogo.es,2021-01-19:/emscripten-cube.html</id><summary type="html">
&lt;p&gt;Hace mucho tiempo publiqu√© un tweet que tuvo cierta tracci√≥n, en √©l mostraba
un cubo interactivo en el navegador que hab√≠a hecho con C++. La magia detr√°s
de ese cubo era una aplicaci√≥n de Qt compilada para Webassembly utilizando un
visor de OpenGL.&lt;/p&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p dir="ltr" lang="en"&gt;Here it is, a little &lt;a href="https://twitter.com/conan_io?ref_src=twsrc%5Etfw"&gt;@conan_io&lt;/a&gt;/&lt;a href="https://twitter.com/jfrog?ref_src=twsrc%5Etfw"&gt;@jfrog ‚Ä¶&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">
&lt;p&gt;Hace mucho tiempo publiqu√© un tweet que tuvo cierta tracci√≥n, en √©l mostraba
un cubo interactivo en el navegador que hab√≠a hecho con C++. La magia detr√°s
de ese cubo era una aplicaci√≥n de Qt compilada para Webassembly utilizando un
visor de OpenGL.&lt;/p&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p dir="ltr" lang="en"&gt;Here it is, a little &lt;a href="https://twitter.com/conan_io?ref_src=twsrc%5Etfw"&gt;@conan_io&lt;/a&gt;/&lt;a href="https://twitter.com/jfrog?ref_src=twsrc%5Etfw"&gt;@jfrog&lt;/a&gt;/&lt;a href="https://twitter.com/isocpp?ref_src=twsrc%5Etfw"&gt;@isocpp&lt;/a&gt; cube running in Chrome compiled to &lt;a href="https://twitter.com/hashtag/webassembly?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#webassembly&lt;/a&gt; using &lt;a href="https://twitter.com/hashtag/Qt?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#Qt&lt;/a&gt; ü§†. Just a couple of steps thanks to the packages and recipes provided by &lt;a href="https://twitter.com/bincrafters?ref_src=twsrc%5Etfw"&gt;@bincrafters&lt;/a&gt; ü§ü I'll write a making of, promise. &lt;a href="https://t.co/0XPbifrant"&gt;pic.twitter.com/0XPbifrant&lt;/a&gt;&lt;/p&gt;‚Äî jgsogo (@jgsogo) &lt;a href="https://twitter.com/jgsogo/status/1089562018355527680?ref_src=twsrc%5Etfw"&gt;January 27, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async="" charset="utf-8" src="https://platform.twitter.com/widgets.js"&gt;&lt;/script&gt;&lt;p&gt;En aquel momento dije que documentar√≠a el proceso, pero no lo hice. Hoy, casualidades
del destino, me siento en deuda con esto de nuevo y ha llegado el momento de comentar
c√≥mo se hizo... aunque haya que hacerlo de nuevo porque perd√≠ el c√≥digo fuente üòÖ.&lt;/p&gt;
&lt;p&gt;He conseguido reproducir el proyecto de una manera m√°s ordenada y quiz√° algunas de las
cosas que se utlizan aqu√≠ podr√≠an incorporarse a los paquetes correspondientes de
&lt;a class="reference external" href="https://conan.io/center"&gt;ConanCenter&lt;/a&gt;, aunque √©se no es el objetivo de este post ni condici√≥n para publicarlo.&lt;/p&gt;
&lt;p&gt;Las tecnolog√≠as que he utilizado, como ya avanzaba, han sido el conocido framework &lt;a class="reference external" href="https://qt.io"&gt;Qt&lt;/a&gt;
y &lt;a class="reference external" href="https://emscripten.org/index.html"&gt;Emscripten&lt;/a&gt; para compilar el c√≥digo a Webassembly. Con Qt es muy sencillo hacer una
aplicaci√≥n de escritorio con un canvas de OpenGL en el que mostrar un cubo, con Emscripten
resulta trivial compilar un proyecto para Webassembly y utilizar el navegador para
renderizarlo. ¬øSer√° muy complicado juntar ambos?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Nota.- La documentaci√≥n recomienda utilizar versiones de las diferentes herramientas
que hayan sido probadas conjuntamente y se sepa que funcionan. En este blogpost seguir√©
esta recomendaci√≥n, aunque algunas otras combinaciones tambi√©n me han funcionado.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Nota.- El proceso ha sido probado en Macos, es esperable que en otros sistemas operativos
sea algo parecido. De cualquier forma, son bienvenidos los comentarios para actualizar esta
publicaci√≥n e incluir m√°s casos de uso.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id3"&gt;Emscripten&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;El primer paso consiste en preparar Emscripten para compilar c√≥digo C++ a Webassembly. El
proceso es muy sencillo y basta con seguir la &lt;a class="reference external" href="https://emscripten.org/docs/getting_started/downloads.html"&gt;documentaci√≥n&lt;/a&gt; disponible en la web:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/emscripten-core/emsdk.git
&lt;span class="nb"&gt;cd&lt;/span&gt; emsdk
git pull
./emsdk install &lt;span class="m"&gt;1&lt;/span&gt;.39.8
./emsdk activate &lt;span class="m"&gt;1&lt;/span&gt;.39.8
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Esta versi√≥n de Emscripten utiliza tambi√©n Python3 aunque no lo instala, versiones m√°s
nuevas lo incluyen vendorizado. Suponemos que el lector si no lo tiene ya disponible en
el &lt;tt class="docutils literal"&gt;PATH&lt;/tt&gt; sabe c√≥mo conseguirlo.&lt;/p&gt;
&lt;p&gt;En este proceso es importante notar el fichero &lt;tt class="docutils literal"&gt;emsdk_env.sh&lt;/tt&gt; que ha sido generado
anteriormente. Este fichero es un &lt;strong&gt;script para activar Emscripten como entorno de
desarrollo&lt;/strong&gt;, a√±adir√° al &lt;tt class="docutils literal"&gt;PATH&lt;/tt&gt; algunos directorios y variables de entorno para utlizar
los compiladores y herramientas que nos permitir√°n generan Webassembly.&lt;/p&gt;
&lt;p&gt;Se recomienda al lector que pruebe algunos ejemplos b√°sicos del &lt;a class="reference external" href="https://emscripten.org/docs/getting_started/Tutorial.html"&gt;getting started&lt;/a&gt;
para verificar que el compilador funciona y tener una primera experiencia con el proceso.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id4"&gt;Qt&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;El siguiente paso es compilar Qt para Webassembly. En realidad lo que haremos es compilar
para nuestro sistema operativo el &lt;em&gt;build-system&lt;/em&gt; &lt;tt class="docutils literal"&gt;qmake&lt;/tt&gt; configurado como &lt;em&gt;cross&lt;/em&gt;-compilador
que utiliza Webassembly como &lt;em&gt;target&lt;/em&gt;. Suena m√°s complicado de lo que es, podemos seguir
los pasos &lt;a class="reference external" href="https://doc.qt.io/qt-5/wasm.html"&gt;este tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En primer lugar deberemos activar Emscripten como indicamos anteriormente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt; emsdk/emsdk_env.sh
emcc -v
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Y descargar y compilar Qt para Webassembly:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget http://download.qt.io/official_releases/qt/5.15/5.15.2/single/qt-everywhere-src-5.15.2.tar.xz
xz -d qt-everywhere-src-5.15.2.tar.xz
tar xopf qt-everywhere-src-5.15.2.tar

&lt;span class="nb"&gt;cd&lt;/span&gt; qt-everywhere-src-5.15.2
./configure -xplatform wasm-emscripten -nomake examples -nomake tests -prefix &lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;/qtbase
make -j16 module-qtbase module-qtdeclarative
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;El proceso anterior tomar√° su tiempo, aprovecha para repasar alg√∫n ejemplo con Emscripten o refrescar
tus conocimientos de Qt. Tal vez sea un buen momento para buscar un &lt;tt class="docutils literal"&gt;Hello World!&lt;/tt&gt; sencillo y ver c√≥mo
funciona &lt;cite&gt;qmake&lt;/cite&gt; con los ficheros &lt;cite&gt;.pro&lt;/cite&gt; para generar las aplicaciones de Qt. Ser√° √∫til en lo que viene
a continuaci√≥n.&lt;/p&gt;
&lt;p&gt;Una vez terminado el proceso anterior deber√≠a haberse generado &lt;strong&gt;el ejecutable&lt;/strong&gt; &lt;tt class="docutils literal"&gt;qtbase/bin/qmake&lt;/tt&gt;, √©ste
es nuestro &lt;em&gt;build-system&lt;/em&gt; preparado para &lt;em&gt;cross&lt;/em&gt;-compilar utilizando Emscripten.&lt;/p&gt;
&lt;p&gt;Si creaste ese peque√±o &lt;tt class="docutils literal"&gt;Hello world!&lt;/tt&gt;, ahora es el momento de comprobar que todo funciona. Dentro de su
directorio s√≥lo tienes que ejecutar:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; hello-world
.../qtbase/bin/qmake
make
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ahora no tienes m√°s que abrir el fichero &lt;tt class="docutils literal"&gt;.html&lt;/tt&gt; con tu navegador de cabecera. ¬°&lt;em&gt;Voil√°&lt;/em&gt;! Lo que antes
era una aplicaci√≥n de escritorio se ha convertido en una applicaci√≥n web. El mismo c√≥digo en C++ lo
hemos utilizado para generar una aplicaci√≥n para dos plataformas totalmente diferentes... esto abre
un &lt;strong&gt;horizonte de posibilidades muy interesante para explorar&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="el-cubo"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id5"&gt;El cubo&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Ya tenemos todas las piezas disponibles y √∫nicamente nos falta el cubo. El cubo no es m√°s que una
aplicaci√≥n de Qt con una ventana de OpenGL. Yo utilic√© como base el &lt;a class="reference external" href="https://doc.qt.io/qt-5/qtopengl-cube-example.html"&gt;ejemplo de OpenGL ES 2.0&lt;/a&gt;,
cambi√© la textura e hice unos ajustes.&lt;/p&gt;
&lt;p&gt;En &lt;a class="reference external" href="https://github.com/jgsogo/qt-opengl-cube/tree/main/qt-opengl-example"&gt;este repositorio&lt;/a&gt; pod√©is encontrar el c√≥digo fuente que yo utilic√©. Utilizando los pasos
anteriores deber√≠a compilarse una aplicaci√≥n para Webassembly que pod√©is abrir en vuestro
navegador:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/jgsogo/qt-opengl-cube.git
&lt;span class="nb"&gt;cd&lt;/span&gt; qt-opengl-cube/qt-opengl-example
.../qtbase/bin/qmake
make
&lt;/pre&gt;&lt;/div&gt;
&lt;hr class="docutils"/&gt;
&lt;p&gt;&lt;strong&gt;Nota.- Todav√≠a tengo que pulir algunos detalles en el blogpost y comprobar que no me he saltado
ning√∫n paso en la explicaci√≥n.&lt;/strong&gt; Si eres de los primeros en llegar por aqu√≠, ten en cuenta que en
el futuro probablemente actualice el art√≠culo a√±adiendo algunos detalles (optimizaciones para que
la ejecuci√≥n sea m√°s r√°pida, c√≥mo ejecutar todo el proceso con Conan en una √∫nica l√≠nea, m√°s detalles
sobre Webassembly, otras versiones de las aplicaciones,...). Stay tuned!&lt;/p&gt;
&lt;/div&gt;
</content><category term="C++"></category><category term="c++"></category><category term="wasm"></category><category term="qt"></category><category term="web"></category></entry><entry><title>Un bot de Telegram con C++</title><link href="https://jgsogo.es/telegram-bot-cpp-madridccppug.html" rel="alternate"></link><published>2019-03-24T13:30:00+01:00</published><updated>2019-03-24T13:30:00+01:00</updated><author><name>Javier G. Sogo</name></author><id>tag:jgsogo.es,2019-03-24:/telegram-bot-cpp-madridccppug.html</id><summary type="html">
&lt;p&gt;Un punto de encuentro habitual entre la programaci√≥n y la ling√º√≠stica son los chatbots,
se trata de aplicaciones que permiten interactuar con los usuarios a trav√©s de plataformas
como WhatsApp o Telegram. Para alguien como yo, con inter√©s en ambos campos, √©ste es un
lugar habitaual al que vuelvo una ‚Ä¶&lt;/p&gt;</summary><content type="html">
&lt;p&gt;Un punto de encuentro habitual entre la programaci√≥n y la ling√º√≠stica son los chatbots,
se trata de aplicaciones que permiten interactuar con los usuarios a trav√©s de plataformas
como WhatsApp o Telegram. Para alguien como yo, con inter√©s en ambos campos, √©ste es un
lugar habitaual al que vuelvo una y otra vez, y as√≠ ha sido, esta vez desde el mundo
del C++.&lt;/p&gt;
&lt;p&gt;Hasta ahora siempre hab√≠a hecho los chatbots utilizando Python, as√≠ funcionan el que
planteamos para Neutr√≥n o el que utilizo para enterarme de ofertas en Wallapop, los ejecuto en
mi Raspberry y siempre tengo acceso a ellos a trav√©s de mi tel√©fono. Una interfaz sencilla,
siempre disponible y que no requiere de ninguna configuraci√≥n de red.&lt;/p&gt;
&lt;p&gt;En el mundo del C++ todo parece m√°s complicado, todo lo que se encuentra en torno al
lenguaje parece estar relacionado con librer√≠as, con t√©cnicas para modernizar el c√≥digo,
pero muy pocas veces podemos leer sobre ejemplos de aplicaciones o peque√±os prototipos
creados con √©l. Pero yo creo que el ecosistema est√° madurando, que el lenguaje ha
adquirido ciertas caracter√≠sticas que aumentan su expresividad y el ecosistema se ha
dotado de herramientas que hacen m√°s accesible el sentarse delante del ordenador y
programar la parte que nos interesa sin preocuparnos por todo lo dem√°s.&lt;/p&gt;
&lt;p&gt;¬°Vamos all√°!&lt;/p&gt;
&lt;div class="section" id="arquitectura-de-un-chatbot"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id1"&gt;Arquitectura de un chatbot&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Un bot de Telegram (extensible a pr√°cticamente cualquier otro bot) es una aplicaci√≥n
conectada continuamente al sistema de mensajer√≠a de Telegram y que responde a
notificaciones procedentes del servidor mensajes.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Arquitectura de un bot de Telegram" src="https://jgsogo.es/images/2019.03.telegram-bot/architecture.png"/&gt;
&lt;p class="caption"&gt;Diagrama explicativo con la arquitectura de un bot de telegram&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Los usuarios individualmente podr√°n iniciar una conversaci√≥n con el bot como si fuera
un usuario m√°s y conversar√°n con √©l en su chat privado; por lo tanto, y esto lo
tendremos que tener en cuenta a la hora de programar, el bot debe ser capaz de mantener
un n√∫mero arbitrario de conversaciones simultaneas, sabremos a cu√°l se refiere cada
mensaje porque ir√° acompa√±ado de un identificador √∫nico.&lt;/p&gt;
&lt;p&gt;Apoy√°ndonos en librer√≠as existentes, nuestra tarea se reduce √∫nicamente a programar cu√°les
son las respuestas del bot a cada uno de los mensajes que los usuarios pueden enviarnos.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="la-libreria-tgbot-cpp"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id2"&gt;La librer√≠a tgbot-cpp&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Para construir nuestro ejemplo utilizaremos la librer√≠a &lt;a class="reference external" href="https://github.com/reo7sp/tgbot-cpp"&gt;tgbot-cpp&lt;/a&gt; de &lt;a class="reference external" href="https://github.com/reo7sp"&gt;Oleg Morozenkov&lt;/a&gt;
que podemos encontrar en Github. No necesitamos entrar en la librer√≠a para utilizarla, es
m√°s nos bastar√° con tener unos conocimientos muy b√°sicos, incluso de C++, para poder
echar a andar nuestro bot.&lt;/p&gt;
&lt;p&gt;La librer√≠a tiene algunas dependencias que necesitaremos tener en nuestro sistema
para poder compilarla, puedes utilizar diferentes estrategias para instalarlas en tu
ordenador, personalmente te recomiendo que utilices &lt;a class="reference external" href="https://conan.io"&gt;Conan&lt;/a&gt;, pero si√©ntete libre de
luchar contra los elementos utilizando las armas que consideres oportunas.&lt;/p&gt;
&lt;p&gt;Si optas por Conan, simplemente tendr√°s que seguir los siguientes pasos:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
pip install conan
conan profile show default
&lt;/pre&gt;
&lt;p&gt;Si utilizas GCC, √©chale un ojo a este trozo de la documentaci√≥n donde se habla de la
compatibilidad binaria: &lt;a class="reference external" href="https://docs.conan.io/en/latest/howtos/manage_gcc_abi.html"&gt;How to manage the GCC&amp;gt;=5 ABI&lt;/a&gt;, probablemente quieras
modificar la &lt;em&gt;libcxx&lt;/em&gt; que Conan ha elegido por defecto.&lt;/p&gt;
&lt;p&gt;Una vez instalado Conan, a√±ade los repositorios remotos necesarios de donde se
descargar√°n las recetas:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan
conan remote add jgsogo https://api.bintray.com/conan/jgsogo/conan-packages
&lt;/pre&gt;
&lt;p&gt;E instala la librer√≠a, as√≠ la tendremos disponible para pr√≥ximos pasos:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
conan install tgbot_cpp/1.1@jgsogo/stable --build&lt;span class="o"&gt;=&lt;/span&gt;missing
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="ejemplo-de-bot-lo-minimo-necesario"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id3"&gt;Ejemplo de bot, lo m√≠nimo necesario&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;El m√≠nimo ejemplo que podemos construir con un bot es uno que nos conteste siempre
lo mismo, peor nos servir√° de ejemplo para probar que todo funciona. Este ejemplo
es el que ya nos ofrece la documentaci√≥n de su librer√≠a: un bot que responde con
un simple &lt;code&gt;"Hi!"&lt;/code&gt; cuando nos conectamos a √©l y que despu√©s nos devuelve el mismo
mensaje que le hemos enviado:&lt;/p&gt;
&lt;pre class="code cpp literal-block"&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;
#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;tgbot/tgbot.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;
&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Initialize the bot
&lt;/span&gt;    &lt;span class="n"&gt;TgBot&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Bot&lt;/span&gt; &lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"PLACE YOUR TOKEN HERE"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// Connect to events and define actions using callbacks
&lt;/span&gt;    &lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getEvents&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;onCommand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"start"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="n"&gt;TgBot&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Ptr&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getApi&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;sendMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;chat&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Hi!"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getEvents&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;onAnyMessage&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="n"&gt;TgBot&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Ptr&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"User wrote %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c_str&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;StringTools&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;startsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"/start"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getApi&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;sendMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;chat&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Your message is: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="c1"&gt;// Run the infinite loop
&lt;/span&gt;    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Bot username: %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getApi&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;getMe&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c_str&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
        &lt;span class="n"&gt;TgBot&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;TgLongPoll&lt;/span&gt; &lt;span class="n"&gt;longPoll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Long poll started&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;longPoll&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TgBot&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;TgException&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"error: %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;what&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;En el c√≥digo anterior hay tres partes diferenciadas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;La construcci√≥n del bot, un objeto de la clase &lt;code&gt;TgBot::Bot&lt;/code&gt; al que hay que pasarle
un &lt;em&gt;token&lt;/em&gt; (m√°s adelante hablaremos de esto).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Conectar nuestras acciones a los eventos generados por el bot, hay dos tipos de estos
eventos:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;los comandos, son aquellos que el usuario introduce precedidos por &lt;code&gt;/&lt;/code&gt;
(ejemplos t√≠picos ser√≠an &lt;code&gt;/start&lt;/code&gt; o &lt;code&gt;/help&lt;/code&gt;), y&lt;/li&gt;
&lt;li&gt;los mensajes de texto, todos ellos entrar√°n a trav√©s del evento &lt;code&gt;onAnyMessage&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Como se puede ver en el ejemplo, se est√°n conectando unos &lt;em&gt;callbacks&lt;/em&gt; a cada uno de los
eventos anteriores, su implementaci√≥n se corresponde con la que presentamos al introducir
el ejemplo del bot.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Ejecutar el bot utilizando un bucle infinito.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="como-compilarlo"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id4"&gt;C√≥mo compilarlo&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Si provienes de Python o de otros lenguajes interpretados quiz√° esto te sorprenda, pero el
c√≥digo de C++ hay que compilarlo, no basta con ejecutarlo como si fuera un &lt;em&gt;script&lt;/em&gt;, no;
necesitamos generar el binario de la aplicaci√≥n, el &lt;code&gt;.exe&lt;/code&gt;, que ser√° lo que ejecutemos.
En esto se basan los mayores logros y desencantos de este lenguaje.&lt;/p&gt;
&lt;p&gt;Para compilarlo utilizar√© &lt;a class="reference external" href="https://cmake.org/"&gt;CMake&lt;/a&gt; y por lo tanto har√° falta un fichero &lt;code&gt;CMakeLists.txt&lt;/code&gt;
para nuestro proyecto:&lt;/p&gt;
&lt;pre class="code cmake literal-block"&gt;
&lt;span class="nb"&gt;cmake_minimum_required&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;VERSION&lt;/span&gt; &lt;span class="s"&gt;2.8.12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;project&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;BotHelloWorld&lt;/span&gt; &lt;span class="s"&gt;CXX&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CMAKE_BINARY_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/conanbuildinfo.cmake&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;conan_basic_setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nb"&gt;add_executable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;bot_hello_world&lt;/span&gt; &lt;span class="s"&gt;main.cpp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;target_link_libraries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;bot_hello_world&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CONAN_LIBS&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;set_target_properties&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;bot_hello_world&lt;/span&gt; &lt;span class="s"&gt;PROPERTIES&lt;/span&gt; &lt;span class="s"&gt;CXX_STANDARD&lt;/span&gt; &lt;span class="s"&gt;11&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Mejor que copiar los &lt;em&gt;snippets&lt;/em&gt; de c√≥digo que aparecen aqu√≠ es que te clones el repositorio que
hemos preparado en el &lt;a class="reference external" href="https://madridccppug.github.io/meetups/"&gt;grupo de usuarios de C++ de Madrid&lt;/a&gt; con algunos ejemplos y que lo
compiles desde all√≠:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
git clone https://github.com/madridccppug/workshop-telegram-bot.git
&lt;span class="nb"&gt;cd&lt;/span&gt; workshop-telegram-bot/hello_world

mkdir build &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; build
conan install .. --build&lt;span class="o"&gt;=&lt;/span&gt;missing
cmake .. -DCMAKE_BUILD_TYPE&lt;span class="o"&gt;=&lt;/span&gt;Release
cmake --build .

./bin/bot_hello_world
&lt;/pre&gt;
&lt;div class="section" id="el-token-tu-bot"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id5"&gt;El token, tu bot&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Si has llegado hasta aqu√≠, habr√°s visto que el bot necesita un token para funcionar, y si has
echado un vistazo al c√≥digo fuente tambi√©n sabr√°s que en nuestros utilizamos la variable de
entorno &lt;code&gt;MADRIDCCPPUG_BOT_TOKEN&lt;/code&gt; para pasarle este token a nuestro bot.&lt;/p&gt;
&lt;p&gt;Cada &lt;strong&gt;token identifica a un bot diferente&lt;/strong&gt;, es la clave que permite que tu programa se
identifique contra los servidores de Telegram y que el intercambio de mensajes entre los usuarios
y tu bot llegue a tu aplicaci√≥n en vez de hacerlo a cualquier otra. Conseguir un &lt;em&gt;token&lt;/em&gt; es
muy sencillo, s√≥lo tendr√°s que iniciar una conversaci√≥n (utilizando Telegram) con el
&lt;a class="reference external" href="https://telegram.me/BotFather"&gt;BotFather&lt;/a&gt;, el bot de Telegram que te permite dar de alta nuevos bots.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Logotipo BotFather" src="https://jgsogo.es/images/2019.03.telegram-bot/botfather.png"/&gt;
&lt;p class="caption"&gt;The BotFather&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="otros-bots-de-ejemplo"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id6"&gt;Otros bots de ejemplo&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;En el repositorio que te has clonado anteriormente tienes disponibles otros ejemplos de bots,
todos ellos se compilan y funcionan de la misma forma:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;code&gt;random_chat&lt;/code&gt;: se trata de un bot que conecta dos a dos a los usuarios que est√°n
hablando con √©l en ese momento, tal y como hac√≠a el &lt;a class="reference external" href="https://es.wikipedia.org/wiki/Chatroulette"&gt;Chatroulette&lt;/a&gt; pero en formato
conversacional.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wordnet_game&lt;/code&gt;: este bot es un trivial de definiciones en ingl√©s. El bot muestra una
definici√≥n y ofrece cuatro palabras, s√≥lo una de ellas se corresponde con la definici√≥n.
Para programar este juego he utilizado tambi√©n la librer√≠a &lt;a class="reference external" href="https://github.com/jardon-u/wordnet-blast"&gt;wordnet-blast&lt;/a&gt; que permite
el acceso desde C++ a la base de datos de &lt;a class="reference external" href="https://wordnet.princeton.edu/"&gt;WordNet&lt;/a&gt; de la cual, sin lugar a dudas, merece
la pena hablar en otra ocasi√≥n.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;___&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="notas-y-materiales"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id7"&gt;Notas y materiales&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Repositorio con ejemplos: &lt;a class="reference external" href="https://github.com/madridccppug/workshop-telegram-bot"&gt;https://github.com/madridccppug/workshop-telegram-bot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Diapositivas correspondientes a la presentaci√≥n del 21 de marzo de 2019 en grupo
de usuarios de C++ de Madrid: &lt;a class="reference external" href="https://docs.google.com/presentation/d/1B5pPftL06dW1k87M5eyMk-MwfkqXWhzXmXrN0kKP0dk/edit?usp=sharing"&gt;https://docs.google.com/presentation/d/1B5pPftL06dW1k87M5eyMk-MwfkqXWhzXmXrN0kKP0dk/edit?usp=sharing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="C++"></category><category term="chatbot"></category><category term="c++"></category><category term="telegram"></category><category term="conan"></category></entry><entry><title>M√©todos lazy (opcionales) en una clase</title><link href="https://jgsogo.es/python-lazy-methods.html" rel="alternate"></link><published>2018-04-13T10:20:00+02:00</published><updated>2018-04-13T10:20:00+02:00</updated><author><name>Javier G. Sogo</name></author><id>tag:jgsogo.es,2018-04-13:/python-lazy-methods.html</id><summary type="html">&lt;p&gt;Este post es un &lt;strong&gt;apunte r√°pido&lt;/strong&gt; para documentar una implementaci√≥n de funciones &lt;tt class="docutils literal"&gt;lazy&lt;/tt&gt; a trav√©s de
decoradores en una clase de Ptyhon. La idea es tener una forma sencilla de definir funciones de
una clase que:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;se puedan ejecutar tan pronto como se crea un objeto (o no),&lt;/li&gt;
&lt;li&gt;almacenen en ‚Ä¶&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Este post es un &lt;strong&gt;apunte r√°pido&lt;/strong&gt; para documentar una implementaci√≥n de funciones &lt;tt class="docutils literal"&gt;lazy&lt;/tt&gt; a trav√©s de
decoradores en una clase de Ptyhon. La idea es tener una forma sencilla de definir funciones de
una clase que:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;se puedan ejecutar tan pronto como se crea un objeto (o no),&lt;/li&gt;
&lt;li&gt;almacenen en cach√© el resultado de la funci√≥n&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;esta implementaci√≥n puede ser √∫til en el contexto de clases cuyo objetivo es parsear archivos
de texto pesados. La ejecuci√≥n inmediata permita conocer tan pronto como sea posible si hay
alg√∫n error en el formato.&lt;/p&gt;
&lt;p&gt;Las piezas necesarias para montarlo son:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Un decorador:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;lazy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lazy_keyword&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'__&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__call__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;warning&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Do not use &amp;#64;lazy for free functions like '&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt;'. Did you intend &amp;#64;memoize?&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__get__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inst&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;cls&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;inst&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;wrapped_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="nb"&gt;hasattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inst&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lazy_keyword&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                    &lt;span class="c1"&gt;# setattr(inst, self.lazy_keyword, self.func(inst, *args, **kwargs))&lt;/span&gt;
                    &lt;span class="nb"&gt;setattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inst&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lazy_keyword&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;types&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MethodType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inst&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inst&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lazy_keyword&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;wrapped_func&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;init_cls&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="nb"&gt;issubclass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LazyMixin&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Use &amp;#64;lazy for member functions of classes that inherit from LazyMixin&amp;quot;&lt;/span&gt;

        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;wrapped_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inst&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="nb"&gt;hasattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inst&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lazy_keyword&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="c1"&gt;# setattr(inst, self.lazy_keyword, self.func(inst, *args, **kwargs))&lt;/span&gt;
                &lt;span class="nb"&gt;setattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inst&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lazy_keyword&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;types&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MethodType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inst&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inst&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lazy_keyword&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="bp"&gt;cls&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_lazy_functions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wrapped_func&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Una metaclase:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MetaLazy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bases&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;classdict&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;'LazyMixin'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;cls&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_lazy_functions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

        &lt;span class="c1"&gt;# getmembers retrieves all attributes&lt;/span&gt;
        &lt;span class="c1"&gt;# including those inherited from parents&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;inspect&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getmembers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lazy&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;init_cls&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Una clase base:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;LazyMixin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;__metaclass__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MetaLazy&lt;/span&gt;

    &lt;span class="n"&gt;_lazy_functions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;invoke_lazy_functions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_lazy_functions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Apoy√°ndose en esto, uno puede definir clases que tengan funciones &lt;cite&gt;lazy&lt;/cite&gt;:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ALazyClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LazyMixin&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lazy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;lazy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;invoke_lazy_functions&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="nd"&gt;&amp;#64;lazy&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;lazy1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;return 23&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;...espero volver pronto por aqu√≠ para mejorar este apunte.&lt;/p&gt;
</content><category term="Python"></category><category term="python"></category><category term="lazy"></category><category term="snippet"></category></entry><entry><title>No hay PLN sin ling√º√≠stica</title><link href="https://jgsogo.es/no-pln-without-linguistics.html" rel="alternate"></link><published>2017-12-22T18:30:00+01:00</published><updated>2017-12-22T18:30:00+01:00</updated><author><name>Javier G. Sogo</name></author><id>tag:jgsogo.es,2017-12-22:/no-pln-without-linguistics.html</id><summary type="html">
&lt;p&gt;El Procesamiento de Lenguaje Natural tiene que apoyarse necesariamente en los profesionales del
lenguaje, ling√ºistas y fil√≥logos que desde los inicios de la Inteligencia Artificial han propuesto
modelos para trabajar con √©l, analizarlo y extraer informaci√≥n. Los enfoques simb√≥lico y estad√≠stico
con los que se trabaja en PLN actualmente deben ‚Ä¶&lt;/p&gt;</summary><content type="html">
&lt;p&gt;El Procesamiento de Lenguaje Natural tiene que apoyarse necesariamente en los profesionales del
lenguaje, ling√ºistas y fil√≥logos que desde los inicios de la Inteligencia Artificial han propuesto
modelos para trabajar con √©l, analizarlo y extraer informaci√≥n. Los enfoques simb√≥lico y estad√≠stico
con los que se trabaja en PLN actualmente deben colaborar estrechamente para generar las
herramientas que nos permitir√°n interactuar con las m√°quinas utilizando el lenguaje.&lt;/p&gt;
&lt;p&gt;Este art√≠culo resume la charla que ofrec√≠ el 21 de diciembre de 2017 en Google Campus (Madrid) en
el encuentro de &lt;a class="reference external" href="https://madrid.city.ai/"&gt;Madrid.ai&lt;/a&gt; &lt;a class="footnote-reference" href="#id6" id="id1"&gt;[1]&lt;/a&gt; &lt;a class="footnote-reference" href="#id7" id="id2"&gt;[2]&lt;/a&gt;. En aquel encuentro tambi√©n participaron &lt;a class="reference external" href="https://www.linkedin.com/in/cristinasantamarina/"&gt;Cristina Santamarina&lt;/a&gt; hablando
sobre desarrollo de chatbots, y &lt;a class="reference external" href="https://www.linkedin.com/in/nievesabalosserrano/"&gt;Nieves √Åbalos&lt;/a&gt; y &lt;a class="reference external" href="https://www.linkedin.com/in/carlosmunozromero/"&gt;Carlos Mu√±oz-Romero&lt;/a&gt; exponiendo los desaf√≠os que supone dotar
a una inteligencia artificial de emociones y personalidad.&lt;/p&gt;
&lt;div class="section" id="introduccion"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id11"&gt;Introducci√≥n&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote class="twitter-tweet" data-lang="es"&gt;&lt;p dir="ltr" lang="es"&gt;"No hay PLN sin ling√º√≠stica", &lt;a href="https://twitter.com/jgsogo?ref_src=twsrc%5Etfw"&gt;@jgsogo&lt;/a&gt; en &lt;a href="https://twitter.com/Madrid_City_AI?ref_src=twsrc%5Etfw"&gt;@Madrid_City_AI&lt;/a&gt; &lt;a href="https://t.co/Olw37AOKV9"&gt;pic.twitter.com/Olw37AOKV9&lt;/a&gt;&lt;/p&gt;‚Äî Elena √Ålvarez Mellado (@lirondos) &lt;a href="https://twitter.com/lirondos/status/943904699522207744?ref_src=twsrc%5Etfw"&gt;21 de diciembre de 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async="" charset="utf-8" src="https://platform.twitter.com/widgets.js"&gt;&lt;/script&gt;&lt;p&gt;Quienes me conoc√©is sab√©is perfectamente que mantengo una cruzada personal por recuperar a los ling√ºistas
para la tarea en la que han sido formados durante a√±os. Me da rabia que personas con varios a√±os de Universidad
acaben haciendo un trabajo de etiquetado que, aunque necesario, no necesita su nivel de formaci√≥n. As√≠ que aprovecho
cualquier oportunidad para intentar poner en valor los estudios de letras, la filolog√≠a y la ling√º√≠stica.&lt;/p&gt;
&lt;p&gt;Esta charla sigue la de otra que d√≠ en la Facultad de Filolog√≠a de la Universidad de Valladolid para estudiantes de grado
y que despu√©s adapt√© para el colectivo de desarrolladores de &lt;a class="reference external" href="https://twitter.com/cylicon_valley"&gt;CyliconValley&lt;/a&gt;. En aquellas charlas me centraba en las ontolog√≠as,
en la primera de ellas trataba de hacer ver a los estudiantes que ellos eran necesarios para generarlas y en la segunda pretend√≠a
mostrar a los programadores c√≥mo necesitan la ayuda de estos profesionales para hacer una ontolog√≠a de calidad. Pero lo cierto es
que a d√≠a de hoy los ling√ºistas ya est√°n trabajando en la industria del PLN, ya hay puestos importantes cubiertos por
personas cuya formaci√≥n es puramente de letras, llevan equipos, toman decisiones e indican a los t√©cnicos el enfoque que
debe darse a los desarrollos. A los alumnos hay que animarles con ese tiempo futuro para que piensen que el mundo les est√°
esperando, pero en auditorios m√°s curtidos debemos reconocer que &lt;strong&gt;no hay PLN sin ling√º√≠stica&lt;/strong&gt;, ni puede haberlo, que si
queremos montar un negocio que trabaje con el lenguaje debemos contar con la ayuda de un especialista.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Mapa con el primer viaje de Crist√≥bal Col√≥n donde se muestra la ruta seguida por las naves y su coincidencia con las corrientes y vientos dominantes en el Oc√©ano Atl√°ntico." src="https://jgsogo.es/images/2017.12_madridai/colon_viaje.jpg"/&gt;
&lt;p class="caption"&gt;Podemos abordar los problemas de PLN tir√°ndonos al mar y experimentando o podemos estudiar todo lo relacionado y partir √∫nicamente cuando conozcamos en detalle todos los fen√≥menos de la lengua.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;En el mundo del PLN a√∫n no est√°n definidos los problemas que deben resolverse, no hay pruebas que permitan determinar si un
algoritmo ha superado cierta tarea o no; el objetivo de comprender el lenguaje natural incluye una dosis de subjetividad sobre la
que es complicado evaluar los avances tecnol√≥gicos. La parte m√°s tecnol√≥gica y la industria ha echado las naves al mar y navega
en busca de la soluci√≥n creando gran expectaci√≥n en torno a ella y quiz√° una sensaci√≥n de &lt;em&gt;hype&lt;/em&gt; a la que puede sucederse una
decepci√≥n importante; por su parte, los investigadores a√∫n se encuentran estudiando el detalle de los vientos y las mareas del lenguaje,
proponiendo soluciones a un ritmo constante, pero mucho m√°s pausado. Lo que est√° claro es que la industria en su vagar por el Oc√©ano no
puede hacer otra cosa que utilizar las mareas y los vientos cuando se encuentra con ellos y, en alg√∫n momento, alg√∫n barco llegar√°
al destino.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="que-entiendo-por-pln"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id12"&gt;¬øQu√© entiendo por PLN?&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;El Procesamiento de Lenguaje Natural (PLN) es una rama de la Inteligencia Artificial que comprende problemas muy variados con
un grado de madurez muy diferente entre ellos (esta &lt;a class="reference external" href="https://github.com/Kyubyong/nlp_tasks"&gt;recopilaci√≥n de Kyubyong&lt;/a&gt; ofrece un listado bastante completo), aunque cuando
yo hablo de PLN quiero referirme al &lt;strong&gt;conjunto de herramientas, algoritmos, modelos,... que me permiten convertir un texto expresado
correctamente en lenguaje natural en un conjunto de datos que pueden ser procesados por un algoritmo&lt;/strong&gt;. Desde mi punto de vista es la
tarea m√°s dependiente del PLN y, en consecuencia, una de las m√°s dif√≠ciles de productivizar en un entorno industrial.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Charla en Campus Madrid: ¬øQu√© entiendo por PLN?" src="https://jgsogo.es/images/2017.12_madridai/pln_yo.jpg"/&gt;
&lt;/div&gt;
&lt;p&gt;El algoritmo del PLN, por lo tanto, contar√≠a con el texto plano como principal entrada de datos y adicionalmente podr√≠a recibir
informaci√≥n contextual sobre el tono del mensaje y el contexto del hablante. Su tarea principal consistir√≠a en convertir ese
documento en datos estructurados, aunque si tenemos en cuenta Collobert et al. (2011) &lt;em&gt;"Will a computer program ever be able to
convert a piece of English text into a programmer friendly data structure that describes the meaning of the natural language text?
Unfortunately, no consensus has emerged about the form or the existence of such a data structure"&lt;/em&gt; &lt;a class="footnote-reference" href="#id8" id="id3"&gt;[3]&lt;/a&gt; debemos ser bastante
pesimistas. Sin embargo, quiero creer que aqu√≠ se habla de codificar el lenguaje con todos sus matices, pero que la duda
no es tal si pensamos en codificar una informaci√≥n m√°s f√°ctica.&lt;/p&gt;
&lt;p&gt;La carencia de un &lt;em&gt;standard&lt;/em&gt; de codificaci√≥n dificulta la aparici√≥n de empresas que se ocupen exclusivamente de esta parte del
PLN (desde el texto en bruto hasta la informaci√≥n estructurada) y la mayor√≠a de las empresas intentan abordar por ellas mismas
el problema de extremo a extremo, es decir, desde la entrada de texto hasta la aplicaci√≥n de negocio.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="la-linguistica-en-el-pln"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id13"&gt;La ling√º√≠stica en el PLN&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;El nacimiento de la Inteligencia Artificial estuvo muy condicionado por los trabajos en torno a la traducci√≥n autom√°tica de los
a√±os 1950s y 1960s, en esta √©poca se segu√≠a un enfoque puramente simb√≥lico y basado en reglas para abordar el problema y, sin
duda alguna, el papel de los ling√ºistas en aquella √©poca fue muy relevante. Posteriormente la evoluci√≥n de la IA confi√≥ en la
potencia de c√°lculo de los procesadores y prim√≥ el desarrollo basado en m√©todos estad√≠sticos, sin embargo, hoy en d√≠a se vuelve
a mirar el enfoque simb√≥lico y su combinaci√≥n con la potencia de c√°lculo actual y la gran abundancia de datos disponibles.&lt;/p&gt;
&lt;div class="section" id="la-semantica-distribucional"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id14"&gt;La sem√°ntica distribucional&lt;/a&gt;&lt;/h3&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="El caballero negro exige a los protagonistas de Los Caballeros de la Mesa Cuadrada (Monty Python) que le traigan una alm√°ciga para poder cruzar el bosque." src="https://jgsogo.es/images/2017.12_madridai/semantica_distribucional.jpg"/&gt;
&lt;p class="caption"&gt;A trav√©s del contexto de una palabra podemos inferir rasgos de su significado.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;En 1957, en la primera etapa del PLN, el ling√ºista brit√°nico &lt;a class="reference external" href="https://es.wikipedia.org/wiki/John_Rupert_Firth"&gt;John Rupert Firth&lt;/a&gt; expon√≠a su noci√≥n del contexto de situaci√≥n seg√∫n
la cual el significado de una palabra pod√≠a extraerse del contexto en el que aparece: &lt;em&gt;"You shall know a word by the company it keeps"&lt;/em&gt; &lt;a class="footnote-reference" href="#id9" id="id4"&gt;[4]&lt;/a&gt;,
la aplicaci√≥n de este principio est√° en la base de los conocidos algoritmos de &lt;em&gt;word embeddings&lt;/em&gt; que aparecerieron hace algunos
a√±os: word2vec (Mikolov &lt;em&gt;et al.&lt;/em&gt;, 2013) y GloVe (Pennington &lt;em&gt;et al.&lt;/em&gt;, 2014). Estos algoritmos permiten extraer informaci√≥n sem√°ntica de
texto sin anotar, simplemente calculando las probabilidades de aparici√≥n de una palabra en un contexto (o de un contexto en el
entorno de una palabra).&lt;/p&gt;
&lt;p&gt;El ejemplo de &lt;tt class="docutils literal"&gt;word2vec&lt;/tt&gt; que se hizo famoso fue el que relacionaba las palabras rey y reina: &lt;tt class="docutils literal"&gt;king - man + woman = queen&lt;/tt&gt;. Como
se observa en la imagen inferior, el algoritmo ha podido capturar significados sem√°nticos a partir del texto. En uno de ellos se
codifica el cambio de rol de g√©nero (flecha roja) de tal forma que aplicado a una palabra con rol masculino nos lleva a su
correspondiente femenina, as√≠ al aplicarlo a &lt;em&gt;king&lt;/em&gt; obtenemos &lt;em&gt;queen&lt;/em&gt;, al hacerlo con &lt;em&gt;man&lt;/em&gt; obtenemos &lt;em&gt;woman&lt;/em&gt;,... La otra relaci√≥n
que se observa en la imagen codifica el incremento de autoridad o realeza (flecha verda), as√≠ aplicando este vector a &lt;em&gt;man&lt;/em&gt; obtenemos
&lt;em&gt;king&lt;/em&gt;, haci√©ndolo sobre &lt;em&gt;woman&lt;/em&gt; llegamos a &lt;em&gt;queen&lt;/em&gt; y cabe esperar que si lo aplic√°ramos sobre la palabra &lt;em&gt;kid&lt;/em&gt; nos conducir√≠a
a &lt;em&gt;princeps&lt;/em&gt;.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Ejemplo de word2vec en el que se muestra los vectores sem√°nticos que relacionan algunos conceptos." src="https://jgsogo.es/images/2017.12_madridai/word2vec.png"/&gt;
&lt;p class="caption"&gt;Ejemplo de word2vec (adaptado). El algoritmo captura sentidos sem√°nticos a partir de texto sin anotar.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Esto es bastante sorprendente, a partir de texto tal cual, tenemos un algoritmo capaz de extraer informaci√≥n sem√°ntica sin
necesidad de decirle nada, sin necesidad de etiquetar el texto. Sin embargo, tambi√©n tiene otros inconvenientes:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;El tiempo y la cantidad de datos necesarios para su entrenamiento.&lt;/li&gt;
&lt;li&gt;La interpretabilidad: las palabras se codifican en vectores de n√∫meros reales en los que se ha perdido toda referencia al
dato original del lenguaje, por lo tanto no sabremos qu√© hemos de tocar si queremos evitar (o premiar) ciertos
comportamientos del modelo.&lt;/li&gt;
&lt;li&gt;√âtica: al apartarnos del dato en crudo se pierde la perspectiva de los posibles sesgos que hayan aparecido como
consecuencia de la elecci√≥n de unos datos de entrada.&lt;/li&gt;
&lt;li&gt;C√≥mo aplicar estos algoritmos a la comprensi√≥n del lenguaje, resoluci√≥n de inferencias, preguntas complejas.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="el-filologo-estructurado"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id15"&gt;El fil√≥logo estructurado&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Ya en los or√≠genes del Procesamiento de Lenguaje Natural surgi√≥ la preocupaci√≥n por la representaci√≥n del lenguaje en
estructuras formales que permitieran trabajar con √©l y una de las m√°s relevantes fue la representanci√≥n a trav√©s de
grafos que est√° en el origen de los tesauros y las ontolog√≠as.&lt;/p&gt;
&lt;p&gt;Un ontolog√≠a no es m√°s que la formalizaci√≥n del conocimiento sobre el mundo en conceptos y relaciones entre ellos de una
forma no ambigua, expl√≠cita y compartida. As√≠ las ontolog√≠as generalmente est√°n formadas por un tesauro (una jerarqu√≠a de
conceptos seg√∫n sus relaciones de hiperonimia e hiponimia) y un amplio conjunto de relaciones entre ellas. En principio
cualquier ontolog√≠a suficientemente expl√≠cita sobre un dominio de conocimiento es capaz de codificar cualquier
informaci√≥n relativa al mismo.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt='Codificaci√≥n en un grafo ontol√≥gico de la oraci√≥n "¬øQu√© persona trabaja en BiText y contribuye en la misma asociaci√≥n que @jgsogo?".' src="https://jgsogo.es/images/2017.12_madridai/ontologia.jpg"/&gt;
&lt;p class="caption"&gt;Un grafo ontol√≥gico nos permite codificar la informaci√≥n contenida en cualquier oraci√≥n de su dominio, as√≠ las inferencias se convierten en b√∫squedas.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Si inclu√≠mos en el &lt;em&gt;pipeline&lt;/em&gt; convencional (&lt;em&gt;tokeninazi√≥n&lt;/em&gt;, &lt;em&gt;pos-tagging&lt;/em&gt;, lematizaci√≥n, NER,...) la conversi√≥n de la
oraci√≥n a su grafo ontol√≥gico, podr√≠amos codificar la informaci√≥n de un texto en forma de grafo, as√≠ la respuesta
a preguntas complejas no ser√≠a m√°s que la b√∫squeda en el grafo de un nodo y otros problemas como inferencias, resumen,...
se reducir√≠an a operaciones sobre grafos ampliamente documentadas en la literatura.&lt;/p&gt;
&lt;p&gt;El problema principal de las ontolog√≠as no es ya su coste de generaci√≥n puesto que requiere de la participaci√≥n de un
especialista del lenguaje, sino el coste prohibitivo que supone mantenerlas actualizadas (el lenguaje evoluciona
continuamente, incorpora nuevas palabras, cambia significados, usos,...). Sin embargo son una de las herramientas
m√°s potentes para trabajar en la resoluci√≥n de las ambig√ºedades que aparecen en cada etapa del PLN.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id16"&gt;Conclusi√≥n&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Desde mi punto de vista el futuro del PLN necesita de las contribuciones de ambos campos, del enfoque simb√≥lico y
del estad√≠stico. De la conjunci√≥n de ambos saldr√°n las aplicaciones que triunfar√°n en el futuro pr√≥ximo, aquella
empresa que cuente entre sus trabajadores con fil√≥logos y recursos ling√º√≠sticos posee una ventaja competitiva
fundamental frente a las que s√≥lo conf√≠an en los algoritmos, el &lt;em&gt;big data&lt;/em&gt; y la potencia de c√°lculo. Un enfoque
como el siguiente tendr√≠a muchas probabilidades de √©xito:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Centrarse en un √∫nico dominio (dom√≥tica, legal, restaurantes,...), problema e idioma.&lt;/li&gt;
&lt;li&gt;Construir una ontolog√≠a b√°sica de partida.&lt;/li&gt;
&lt;li&gt;Utilizar &lt;em&gt;embeddings&lt;/em&gt; y otros algoritmos para mantener la ontolog√≠a y a√±adir nuevos t√©rminos.&lt;/li&gt;
&lt;li&gt;Generar un corpus de preguntas para entrenar.&lt;/li&gt;
&lt;li&gt;Programar el &lt;em&gt;pipeline&lt;/em&gt; de PLN.&lt;/li&gt;
&lt;li&gt;Dise√±ar el algoritmo de generaci√≥n de grafos a partir de oraciones.&lt;/li&gt;
&lt;li&gt;Construir el motor de inferencias.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Este enfoque industrial tambi√©n deber√° estar muy pendiente de los principales problemas que hoy ocupan a la investigaci√≥n
en Inteligencia Artificial y cuyas soluciones deber√°n ser incorporadas cuanto antes a cualquier soluci√≥n comercial:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;M√≥dulo de lenguaje controlado: c√≥mo normativizar los textos para que nuestro algoritmo de comprensi√≥n no tenga
que preocuparse por idiolectos singulares o de grupo.&lt;/li&gt;
&lt;li&gt;Interpretabilidad: el comportamiento de seguir las directrices de la empresa, debemos saber qu√© par√°metros hay que
tocar para evitar comportamientos indeseados.&lt;/li&gt;
&lt;li&gt;√âtica: trabajar sobre los sesgos, originados como consecuencia de los datos de partida, del proceso de entrenamiento
o de programaci√≥n del propio algoritmo.&lt;/li&gt;
&lt;li&gt;Legalidad: hay que tener en cuenta que ‚Äú[Salvo consentimiento expl√≠cito
o autorizaci√≥n legal espec√≠ficos,] todo interesado tendr√° derecho a no ser objeto de una decisi√≥n basada √∫nicamente en
el tratamiento automatizado, incluida la elaboraci√≥n de perfiles, que produzca efectos jur√≠dicos en √©l o le afecte
significativamente de modo similar‚Äù &lt;a class="footnote-reference" href="#id10" id="id5"&gt;[5]&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;El Procesamiento de Lenguaje Natural es un campo de investigaci√≥n y de aplicaci√≥n pr√°ctica de rabiosa actualidad.
La industria hoy comete el error de querer ir m√°s r√°pido que la tecnolog√≠a y la investigaci√≥n con el √°nimo de aprovechar las expectativas
generadas por la ciencia ficci√≥n en las pel√≠culas, as√≠ genera un &lt;em&gt;hype&lt;/em&gt; con poco fundamento y es posible
que en los pr√≥ximo a√±os se disipe parte de todo este humo y sintamos la decepci√≥n de enfrentarnos a la realidad de
lo que se ha conseguido hasta ahora. Esta decepci√≥n desplazar√° los recursos hacia otras √°reas de la IA m√°s atractivas,
pero de la mano de la investigaci√≥n, de los ling√ºistas y de los desarrolladores preocupados por el origen de los datos,
seguiremos avanzando con paso firme en la exploraci√≥n de este mundo apasionante.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="P√∫blico asistente al evento de Madrid AI en Campus Madrid el 21 de diciembre de 2017." src="https://jgsogo.es/images/2017.12_madridai/publico.jpg"/&gt;
&lt;p class="caption"&gt;P√∫blico asistente al evento de Madrid AI en Campus Madrid el 21 de diciembre de 2017.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;___&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="notas-y-materiales"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id17"&gt;Notas y materiales&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Puedes descargarte la presentaci√≥n correspondiente a la charla &lt;a class="reference external" href="{filename}/pdf/2017.12-Madrid.ai-PLN_linguistics.pdf"&gt;aqu√≠&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Mira algunas de las fotos del evento en &lt;a class="reference external" href="https://www.flickr.com/photos/76867403@N04/albums/72157691335577525"&gt;Flickr&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;table class="docutils footnote" frame="void" id="id6" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"/&gt;&lt;col/&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Convocatoria en Meetup: &lt;a class="reference external" href="https://www.meetup.com/es-ES/MADRID-AI/events/245802179/"&gt;https://www.meetup.com/es-ES/MADRID-AI/events/245802179/&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id7" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"/&gt;&lt;col/&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Rese√±a en Planeta Chatbot: &lt;a class="reference external" href="https://planetachatbot.com/madrid-city-ai-chatbots-y-emociones-a57836487b14"&gt;https://planetachatbot.com/madrid-city-ai-chatbots-y-emociones-a57836487b14&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id8" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"/&gt;&lt;col/&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id3"&gt;[3]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Collobert et al., 2011. &lt;em&gt;Natural Language Processing (Almost) from Scratch&lt;/em&gt;. Journal of Machine Learning Research 12 (2011) 2493-2537. &lt;a class="reference external" href="/pdf/Collobert_2011.pdf"&gt;Download&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id9" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"/&gt;&lt;col/&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id4"&gt;[4]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Citado en: Kenneth Church (2007). &lt;em&gt;A Pendulum Swung too Far&lt;/em&gt;. Linguistic Issues in Language Technology 6 (4): 5.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id10" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"/&gt;&lt;col/&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id5"&gt;[5]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Reglamento (UE) 2016/679 de Protecci√≥n de Datos Personales.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</content><category term="PLN"></category><category term="pln"></category><category term="ontology"></category><category term="semantics"></category><category term="word2vec"></category><category term="chatbot"></category></entry><entry><title>Variadic templates and std::tuple - Motivaci√≥n</title><link href="https://jgsogo.es/variadic-templates-std-tuple-motivation.html" rel="alternate"></link><published>2016-03-21T12:54:00+01:00</published><updated>2016-03-21T12:54:00+01:00</updated><author><name>Javier G. Sogo</name></author><id>tag:jgsogo.es,2016-03-21:/variadic-templates-std-tuple-motivation.html</id><summary type="html">&lt;p&gt;Debo confesar que me he pasado pr√°cticamente todo el fin de semana d√°ndole
vueltas a las &lt;em&gt;variadic templates&lt;/em&gt; para utilizarlas con las estructuras &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;std::tuple&lt;/span&gt;&lt;/tt&gt;.
Y debo confesar que me parece impresionante lo que se puede conseguir (y eso
que me imagino que no he raspado m√°s que la superficie ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;Debo confesar que me he pasado pr√°cticamente todo el fin de semana d√°ndole
vueltas a las &lt;em&gt;variadic templates&lt;/em&gt; para utilizarlas con las estructuras &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;std::tuple&lt;/span&gt;&lt;/tt&gt;.
Y debo confesar que me parece impresionante lo que se puede conseguir (y eso
que me imagino que no he raspado m√°s que la superficie), son una herramienta
increiblemente potente para construir librer√≠as gen√©ricas sin incrementar la
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Cyclomatic_complexity"&gt;complejidad ciclom√°tica&lt;/a&gt; del programa.&lt;/p&gt;
&lt;div class="section" id="motivacion"&gt;
&lt;h2&gt;Motivaci√≥n&lt;/h2&gt;
&lt;p&gt;A ra√≠z de un proyecto personal me he tenido que enfrentar a la ingesta de &lt;em&gt;grandes&lt;/em&gt;
cantidades de datos en formato tabular (b√°sicamente un dump de una base de datos)
y, aunque ya hab√≠a hecho algo al respecto &lt;a class="footnote-reference" href="#id2" id="id1"&gt;[1]&lt;/a&gt; quer√≠a darle una vuelta al tema y darme una
excusa para probar las &lt;em&gt;variadic&lt;/em&gt; junto con las tuplas.&lt;/p&gt;
&lt;p&gt;Quer√≠a reproducir una manera eficiente y fuertemente tipada de leer los datos de los archivos,
acceder a ellos, filtrarlos, proyectarlos,... en cierto modo quer√≠a la simplicidad y
potencia que pone a nuestra disposici√≥n los &lt;em&gt;managers&lt;/em&gt; y las &lt;em&gt;querysets&lt;/em&gt; de Django,
pero quer√≠a descansar un poco de Python e implementarlo en C++.&lt;/p&gt;
&lt;p&gt;A√∫n no lo he conseguido, ni mucho menos, todav√≠a hay mucho trabajo por delante, pero creo
que la l√≠nea de desarrollo elegida promete y quiero compartirlo.&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id2" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Hago referencia al proyecto &lt;a class="reference external" href="https://github.com/jgsogo/txt_table"&gt;txt_table&lt;/a&gt; que, visto lo visto, ya ha caducado.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="std-tuple-a-single-row"&gt;
&lt;h2&gt;std::tuple - a single row&lt;/h2&gt;
&lt;p&gt;La librer√≠a est√°ndar proporciona desde hace tiempo (C++11) una clase que permite almacenar un
conjunto heterogeneo de valores de tama√±o fijo (no tienes excusa para no conocerla). Desde
mi punto de vista es una estructura ideal para representar una fila de una tabla de una base
de datos. El ejemplo de &lt;a class="reference external" href="http://en.cppreference.com/w/cpp/utility/tuple"&gt;cppreference&lt;/a&gt; me parece estupendo:&lt;/p&gt;
&lt;pre class="code cpp literal-block"&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;tuple&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;
#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;
#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;
#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdexcept&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;
&lt;/span&gt;
&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;tuple&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;double&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;get_student&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;make_tuple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;3.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sc"&gt;'A'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Lisa Simpson&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;make_tuple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;2.9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sc"&gt;'C'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Milhouse Van Houten&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;make_tuple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sc"&gt;'D'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Ralph Wiggum&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;invalid_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;student0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_student&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;ID: 0, &amp;quot;&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;GPA: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;student0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;, &amp;quot;&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;grade: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;student0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;, &amp;quot;&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;name: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;student0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="sc"&gt;'\n'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;gpa1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;grade1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;name1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;tie&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gpa1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;grade1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_student&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;ID: 1, &amp;quot;&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;GPA: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;gpa1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;, &amp;quot;&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;grade: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;grade1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;, &amp;quot;&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;name: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;name1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="sc"&gt;'\n'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Si tuvi√©ramos una tabla con el GPA, el &lt;em&gt;grade&lt;/em&gt; y el &lt;em&gt;name&lt;/em&gt; de un conjunto de estudiantes, yo
querr√≠a representar cada fila de esta forma, fuertemente tipada, as√≠ no hay problemas y todo
queda claro.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="std-vector-std-tuple-the-queryset"&gt;
&lt;h2&gt;std::vector&amp;lt;std::tuple&amp;gt; - the queryset&lt;/h2&gt;
&lt;p&gt;Pero en una base de datos lo que tenemos es un conjunto de filas, de elementos &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;std::tuple&amp;lt;...&amp;gt;&lt;/span&gt;&lt;/tt&gt;
de los del apartado anterior; un vector de estos elementos ser√≠a la representaci√≥n en memoria de
un &lt;a class="reference external" href="https://docs.djangoproject.com/es/1.9/ref/models/querysets/"&gt;queryset&lt;/a&gt; de Django; s√≥lo habr√≠a que dotarlo de la funcionalidad adecuada.&lt;/p&gt;
&lt;pre class="code cpp literal-block"&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;tuple&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;
#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;
&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;StudentsManager&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;tuple&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;row_type&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;row_type&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;queryset_type&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;queryset_type&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;qs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;qs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push_back&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;make_tuple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sc"&gt;'A'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Lisa Simpson&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
            &lt;span class="n"&gt;qs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push_back&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;make_tuple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sc"&gt;'C'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Milhouse Van Houten&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
            &lt;span class="n"&gt;qs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push_back&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;make_tuple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sc"&gt;'D'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Ralph Wiggum&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;StudentsManager&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;queryset_type&lt;/span&gt; &lt;span class="n"&gt;queryset&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;StudentsManager&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;queryset&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// Dump all students
&lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="nl"&gt;item&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;queryset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;ID: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;, &amp;quot;&lt;/span&gt;
                  &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;GPA: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;, &amp;quot;&lt;/span&gt;
                  &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;grade: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;, &amp;quot;&lt;/span&gt;
                  &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;name: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="sc"&gt;'\n'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Y podr√≠amos crear f√°cilmente funciones que sirvieran para realizar las operaciones m√°s
comunes con este conjunto de datos:&lt;/p&gt;
&lt;pre class="code cpp literal-block"&gt;
&lt;span class="p"&gt;[...]&lt;/span&gt;
    &lt;span class="c1"&gt;// Sort according to function
&lt;/span&gt;    &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;sorted_students&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;queryset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;queryset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
        &lt;span class="p"&gt;[](&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;StudentsManager&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;row_type&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;lhs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;StudentsManager&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;row_type&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;rhs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lhs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rhs&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="c1"&gt;// Filter by field value
&lt;/span&gt;    &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;gradeA_students&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;queryset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sc"&gt;'A'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="p"&gt;[...]&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="el-problema-surge-al-generalizar"&gt;
&lt;h2&gt;El problema surge al generalizar&lt;/h2&gt;
&lt;p&gt;Como tengo alma de programador no me vale con crear una clase que act√∫e como &lt;em&gt;manager&lt;/em&gt; para
cada uno de mis modelos, sino que quiero generalizar. Y el problema es que quiero &lt;strong&gt;generalizar
en dos dimensiones: tipo de elementos y n√∫mero de columnas de la tabla&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Generalizar en tipo de elementos es f√°cil, ah√≠ est√°n las plantillas. Algo como lo que sigue
podr√≠a valer:&lt;/p&gt;
&lt;pre class="code cpp literal-block"&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;tuple&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;
#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;
&lt;/span&gt;
&lt;span class="k"&gt;template&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt; &lt;span class="n"&gt;T1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;typename&lt;/span&gt; &lt;span class="n"&gt;T2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;typename&lt;/span&gt; &lt;span class="n"&gt;T3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;typename&lt;/span&gt; &lt;span class="n"&gt;T4&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;GenericManager&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="k"&gt;typename&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;tuple&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;T2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;T3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;T4&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;row_type&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;row_type&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;queryset_type&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;queryset_type&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;qs&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Y ya tengo un manager gen√©rico &lt;tt class="docutils literal"&gt;GenericManager&lt;/tt&gt; con el que puedo reutilizar el c√≥digo, pero
s√≥lo para tablas que tengan cuatro columnas, eso s√≠, √©stas pueden ser de cualquier tipo.&lt;/p&gt;
&lt;p&gt;Un poco m√°s dif√≠cil es generalizar el n√∫mero de columnas, hace un tiempo lo habr√≠a hecho
utilizando &lt;a class="reference external" href="http://www.boost.org/doc/libs/1_60_0/libs/preprocessor/doc/index.html"&gt;Boost.Preprocessor&lt;/a&gt;, tengo algunos ejemplos de hace 10 a√±os donde lo usaba, realmente
estoy orgulloso de haberme enfrentado a ese problema de esa forma en aquel momento; pero hoy
no es √©se el camino que quiero seguir.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="el-buen-camino"&gt;
&lt;h2&gt;El buen camino&lt;/h2&gt;
&lt;p&gt;Hay una soluci√≥n mucho m√°s elegante, las &lt;strong&gt;variadic-templates&lt;/strong&gt;, con ellas
podemos generalizar de una manera tan maravillosa como √©sta:&lt;/p&gt;
&lt;pre class="code cpp literal-block"&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;tuple&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;
#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;
&lt;/span&gt;
&lt;span class="k"&gt;template&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="n"&gt;Args&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;GenericManager&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="k"&gt;typename&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;tuple&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Args&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;row_type&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;row_type&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;queryset_type&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;queryset_type&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;qs&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;¬øNo es fant√°stico? Con esta generalizaci√≥n puedo hacer cosas realmente √∫tiles, puedo crear una clase
que se comporte realmente como un &lt;em&gt;manager&lt;/em&gt; gen√©rico y una clase &lt;em&gt;queryset&lt;/em&gt; que implemente
una funcionalidad af√≠n a la que est√° disponible en Django.&lt;/p&gt;
&lt;p&gt;De momento estoy trabajando en ello, b√°sicamente reuniendo respuestas de StackOverflow en un √∫nico
sitio y haci√©ndolas funcionar. Pronto un segundo post con detalles de implementaci√≥n y ejemplos.&lt;/p&gt;
&lt;/div&gt;
</content><category term="C++"></category><category term="variadic templates"></category><category term="metaprogramming"></category><category term="django queryset"></category></entry><entry><title>ChimpPunch</title><link href="https://jgsogo.es/chimppunch.html" rel="alternate"></link><published>2015-09-27T19:00:00+02:00</published><updated>2015-09-27T19:00:00+02:00</updated><author><name>Javier G. Sogo</name></author><id>tag:jgsogo.es,2015-09-27:/chimppunch.html</id><summary type="html">&lt;p&gt;Como √∫ltimamente mucha gente me pregunta por &lt;strong&gt;ChimpPunch&lt;/strong&gt; voy a dejar escritas aqu√≠
algunas cosas para tenerlas como referencia. ChimpPunch fue un proyecto de &lt;em&gt;startup&lt;/em&gt; que
inici√© junto a &lt;a class="reference external" href="https://twitter.com/rafacampoamor"&gt;Rafael P. Campoamor&lt;/a&gt; (CEO) y &lt;a class="reference external" href="https://twitter.com/oneeyedman"&gt;Carlos Ma√±as&lt;/a&gt; (UI/UX) all√° por 2012, con la idea de
hacer un sistema que facilitara ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;Como √∫ltimamente mucha gente me pregunta por &lt;strong&gt;ChimpPunch&lt;/strong&gt; voy a dejar escritas aqu√≠
algunas cosas para tenerlas como referencia. ChimpPunch fue un proyecto de &lt;em&gt;startup&lt;/em&gt; que
inici√© junto a &lt;a class="reference external" href="https://twitter.com/rafacampoamor"&gt;Rafael P. Campoamor&lt;/a&gt; (CEO) y &lt;a class="reference external" href="https://twitter.com/oneeyedman"&gt;Carlos Ma√±as&lt;/a&gt; (UI/UX) all√° por 2012, con la idea de
hacer un sistema que facilitara la gesti√≥n de redes sociales (la tr√≠ada &lt;em&gt;discover&lt;/em&gt;,
&lt;em&gt;stream&lt;/em&gt;, &lt;em&gt;analyze&lt;/em&gt;) para las peque√±as empresas o marcas personales.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Logotipo de ChimpPunch" src="https://jgsogo.es/images/chimppunch.png" /&gt;
&lt;p class="caption"&gt;El monete, imagen de ChimpPunch (dibujo de &amp;#64;oneyedman).&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;El producto no lleg√≥ a buen puerto; si no, en vez de estar utilizando &lt;a class="reference external" href="https://twitter.com/buffer"&gt;&amp;#64;buffer&lt;/a&gt;
ahora, tendr√≠ais a un monete mucho m√°s simp√°tico trabajando para vosotros ;D S√≠ llegamos a tener
un &lt;em&gt;MVP&lt;/em&gt;, pero para salir en aquel momento nos faltaba (o eso cre√≠mos nosotros) mucho m√°s de
&lt;em&gt;machine-learning&lt;/em&gt; y de &lt;em&gt;analytics&lt;/em&gt; de lo que ten√≠amos; y una sucesi√≥n de desafortunadas casualidades
provoc√≥ que nos detuvi√©ramos y ya no supimos arrancar de nuevo.&lt;/p&gt;
&lt;p&gt;Aunque abandonamos el proyecto formalmente yo continu√© interes√°ndome por la parte de
recolecci√≥n de contenidos, clasificaci√≥n,... y segu√≠ mejorando y desarrollando algunos m√≥dulos,
convirti√©ndolos en servicios y automatizando su funcionamiento. Fruto de ello he creado &lt;em&gt;bots&lt;/em&gt;
para Twitter que mantienen con vida algunas cuentas como &lt;a class="reference external" href="https://twitter.com/estudiahistoria"&gt;&amp;#64;EstudiaHistoria&lt;/a&gt;,  &lt;a class="reference external" href="https://twitter.com/chimp_news"&gt;&amp;#64;chimp_news&lt;/a&gt; o &lt;a class="reference external" href="https://twitter.com/grupoalpino"&gt;&amp;#64;grupoalpino&lt;/a&gt; y
tambi√©n me he interesado m√°s formalmente por la Inteligencia Artificial y el Procesamiento de
Lenguaje Natural, que se manifiestan hoy en el &lt;a class="reference external" href="http://www.dia.fi.upm.es/masteria/?q=es/MUIA"&gt;M√°ster Universitario en Inteligencia Artificial&lt;/a&gt;
que hice el a√±o pasado y el grupo de &lt;a class="reference external" href="http://lingwars.github.io/blog/"&gt;Ling·∫Öars&lt;/a&gt; que estamos creando.&lt;/p&gt;
&lt;div class="section" id="diseno-conceptual"&gt;
&lt;h2&gt;Dise√±o conceptual&lt;/h2&gt;
&lt;p&gt;Como he indicado antes, ChimpPunch estaba dividido en tres m√≥dulos principales:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Recuperaci√≥n de informaci√≥n: obtenci√≥n, clasificaci√≥n y recomendaci√≥n de contenidos.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Stream&lt;/em&gt; de publicaciones: el cliente tiene a su alcance una herramienta para
programar publicaciones y centralizar el trabajo de todas sus redes sociales y de
todo su equipo.&lt;/li&gt;
&lt;li&gt;An√°lisis: nuestra herramienta realiza un an√°lisis &lt;em&gt;a posteriori&lt;/em&gt; del comportamiento
de las publicaciones para actualizar los modelos del motor de recomendaci√≥n.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="section" id="recuperacion-de-informacion"&gt;
&lt;h3&gt;Recuperaci√≥n de informaci√≥n&lt;/h3&gt;
&lt;p&gt;En la figura de abajo muestro el dise√±o conceptual de la parte correspondiente a
&lt;strong&gt;recuperaci√≥n de informaci√≥n&lt;/strong&gt; de ChimpPunch:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;El sistema est√° recogiendo continuamente documentos de un conjunto de fuentes din√°mico
(seg√∫n clientes y sus comunidades) y clasific√°ndolos por todo tipo de criterios:
fuentes, autores, tem√°ticas,...&lt;/li&gt;
&lt;li&gt;Los clientes pueden establecer criterios y filtros de selecci√≥n de contenidos, o bien dejar
que ChimpPunch aprenda estos criterios en base a los intereses de la comunidad de seguidores
de cada cliente.&lt;/li&gt;
&lt;li&gt;El comportamiento de las noticias originales en los medios da un √≠ndice de popularidad, inter√©s
o viralidad que se utiliza para puntuarlas. Se crea as√≠ el conjunto de datos etiquetado sobre
el que se trabaja para puntuar los nuevos contenidos que van recuper√°ndose.&lt;/li&gt;
&lt;li&gt;Cada cliente tiene acceso a una lista de contenidos adecuados a sus intereses (&lt;em&gt;discover&lt;/em&gt;),
clasificados por relevancia e impacto, que van a ser bien recibidos por su comunidad.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Dise√±o conceptual de ChimpPunch" src="https://jgsogo.es/images/chimppunch-conceptual.png" /&gt;
&lt;p class="caption"&gt;Dise√±o conceptual de ChimpPunch con la divisi√≥n en m√≥dulos principales.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="stream-de-publicaciones"&gt;
&lt;h3&gt;Stream de publicaciones&lt;/h3&gt;
&lt;p&gt;En ChimpPunch d√°bamos la posibilidad de gestionar todas las redes sociales desde un √∫nico sitio
y adem√°s facilit√°bamos la posibilidad de que varias personas compartieran un √∫nico espacio
de trabajo online para realizar esta tarea.&lt;/p&gt;
&lt;p&gt;Permit√≠amos al usuario definir horarios de publicaci√≥n y programar tweets, nada nuevo hoy en d√≠a
cuando existen tantas herramientas de gesti√≥n de redes sociales.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="analitycs"&gt;
&lt;h3&gt;Analitycs&lt;/h3&gt;
&lt;p&gt;El √∫ltimo m√≥dulo, en el que no llegamos a profundizar, consist√≠a en la parte de an√°litica del
comportamiento de las publicaciones realizadas por el usuario. Habr√≠a dos niveles de an√°lisis:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Estad√≠stica descriptiva: gr√°ficos y tablas mostrando c√≥mo se hab√≠an comportado las publicaciones,
t√≠picos dibujitos que muestran muchos datos, pero poca informaci√≥n realmente √∫til para el usuario.
No obstante, estos datos se utilizar√≠an para actualizar el modelo de recomendaci√≥n de contenidos
y personalizarlo para cada cliente (¬øos suena Bayes?)&lt;/li&gt;
&lt;li&gt;Informaci√≥n: en base a las interacciones con los contenidos pretend√≠amos facilitar al
usuario datos sobre sus clientes que permitieran segmentarlos e identificar el tipo de
publicaciones que consum√≠an para ayudar en el dise√±o de campa√±as de marketing y maximizar
las m√©tricas de conversi√≥n.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="chimppunch-hoy"&gt;
&lt;h2&gt;ChimpPunch hoy&lt;/h2&gt;
&lt;p&gt;Aunque el proyecto en su conjunto se detuvo yo continu√© el desarrollo centrado en la parte de
recuperaci√≥n de informaci√≥n y, a partir de ah√≠, he desarrollado dos aplicaciones que funcionan
como servicio y que est√°n envejeciendo bastante bien:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;chimp_scraper&lt;/strong&gt;: se trata de un servicio para obtener informaci√≥n estructurada de una web;
parte de una base de datos introducida por el usuario (yo) con cadenas XPath y regex para
obtener datos caracter√≠sticos de un post (autor, tags, fecha de publicaci√≥n, fotos, contenido,...)
y con ellos trata de obtener la misma informaci√≥n de cualquier otra URL que se le pase.
Supongo que algo as√≠ debi√≥ ser el MVP de &lt;a class="reference external" href="https://import.io"&gt;import.io&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;chimp_social_monitor&lt;/strong&gt;: servicio para monitorizar el comportamiento de una URL en redes
sociales. Una vez que la URL est√° dada de alta se encarga de recoger informaci√≥n de Twitter,
Facebook, G+ y LinkedIn, almacenarla y devolverla aplicando diferentes filtros.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ambas aplicaciones las orquesto a trav√©s de una interfaz web &lt;strong&gt;chimp_discovery&lt;/strong&gt; que se encarga
de interactuar con el usuario, almacenar sus preferencias, sus horarios de publicaci√≥n y la
lista de publicaciones.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Como pod√©is ver el proyecto era completito y muy interesante. Una pena que se quedara en el caj√≥n,
aunque indudablemente es una experiencia m√°s que incorporar a la mochila de herramientas
y un conjunto de conocimientos muy importante. Quien sabe si alg√∫n d√≠a seguir√° creciendo otro
poco.&lt;/p&gt;
&lt;/div&gt;
</content><category term="Bio"></category><category term="information retrieval"></category><category term="startup"></category><category term="chimppunch"></category><category term="rafapcampoamor"></category><category term="oneeyedman"></category></entry><entry><title>Mapa din√°mico con los trenes (continuar√°...)</title><link href="https://jgsogo.es/renfe-circulaciones-1.html" rel="alternate"></link><published>2015-09-22T20:24:00+02:00</published><updated>2015-09-22T20:24:00+02:00</updated><author><name>Javier G. Sogo</name></author><id>tag:jgsogo.es,2015-09-22:/renfe-circulaciones-1.html</id><summary type="html">&lt;p&gt;El &lt;a class="reference external" href="https://jgsogo.es/renfe-project.html"&gt;proyecto RENFE&lt;/a&gt; empieza a dar sus frutos a pesar de que no puedo dedicarle todo el tiempo que
quisiera (y que probablemente se merezca), as√≠ que en un peque√±o par√©ntesis os voy a contar los
avances: ya saco los horarios de todos los trenes, he logrado posicionar la mayor√≠a ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;El &lt;a class="reference external" href="https://jgsogo.es/renfe-project.html"&gt;proyecto RENFE&lt;/a&gt; empieza a dar sus frutos a pesar de que no puedo dedicarle todo el tiempo que
quisiera (y que probablemente se merezca), as√≠ que en un peque√±o par√©ntesis os voy a contar los
avances: ya saco los horarios de todos los trenes, he logrado posicionar la mayor√≠a de las estaciones
(aunque a√∫n me quedan m√°s de 2000 alias por identificar) y ahora tambi√©n sit√∫o los trenes dentro
de su trayecto entre estaciones, es decir, que calculo su posici√≥n para cualquier instante temporal.&lt;/p&gt;
&lt;p&gt;Y aqu√≠ ten√©is el resultado. A m√≠ me hipnotiza, y me encanta ver d√≥nde se cruzan los trenes ;D&lt;/p&gt;
&lt;iframe width="100%" height="520" frameborder="0" src="https://jgsogo.cartodb.com/viz/1f707e86-613c-11e5-a7e5-0e9d821ea90d/embed_map" allowfullscreen webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;No obstante todav√≠a me queda trabajo por delante, dos &lt;em&gt;issues&lt;/em&gt; principales:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;No est√°n inclu√≠dos los trenes que tienes varias cabeceras o destinos como es el caso de varios que
con origen o destino en Galicia, por lo que esa parte del mapa est√° infrarrepresentada.&lt;/li&gt;
&lt;li&gt;Los trenes viajan en l√≠nea recta entre las estaciones.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Es segundo punto es un problema relativamente complejo. Gracias a &amp;#64;jgcasta tengo las principales l√≠neas
de ferrocarril de Espa√±a, pero estas l√≠neas no est√°n etiquetadas ni conectadas, son s√≥lo dibujos, l√≠neas.
Lo que me propongo es construir un grafo donde los nodos sean las estaciones y estas l√≠neas los arcos que
las unen de tal manera que cuando un tren vaya de una estaci√≥n a otra yo sepa sin ambig√ºedad cu√°l de los
arcos est√° siguiendo y pueda proyectar su movimiento sobre √©l.&lt;/p&gt;
&lt;p&gt;Sin embargo, las l√≠neas se cruzan de vez en cuando (sin existir aguja) y otras que deber√≠an estar unidas
est√°n ligeramente separadas con lo que no es f√°cil identificar qu√© l√≠nea va a continuaci√≥n de cual otra,
algunos de estos casos se pueden ver en la siguiente figura:&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Intersecciones entre l√≠neas en las proximidades de Le√≥n." src="https://jgsogo.es/images/renfe-lines-leon.png" /&gt;
&lt;p class="caption"&gt;Mapa de intersecciones entre l√≠neas (puntos blancos) en las proximidades de la ciudad de Le√≥n.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Me temo que construir este grafo va a requerir bastante trabajo... os mantendr√© informados.&lt;/p&gt;
</content><category term="Projects"></category><category term="renfe"></category><category term="railway"></category><category term="geo"></category><category term="cartodb"></category></entry><entry><title>Ling·∫Öars: Desaf√≠os y juegos</title><link href="https://jgsogo.es/lingwars-games.html" rel="alternate"></link><published>2015-09-15T19:00:00+02:00</published><updated>2015-09-15T19:00:00+02:00</updated><author><name>Javier G. Sogo</name></author><id>tag:jgsogo.es,2015-09-15:/lingwars-games.html</id><summary type="html">&lt;p&gt;Esta semana he estado entretenido creando una arquitectura web para que el grupo
de Ling·∫Öars pueda publicar online juegos y desaf√≠os de forma sencilla. B√°sicamente
el objetivo que persegu√≠a era que se puediera crear un juego implementando un par
de funciones y que el sistema lo dotara autom√°ticamente de presencia ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;Esta semana he estado entretenido creando una arquitectura web para que el grupo
de Ling·∫Öars pueda publicar online juegos y desaf√≠os de forma sencilla. B√°sicamente
el objetivo que persegu√≠a era que se puediera crear un juego implementando un par
de funciones y que el sistema lo dotara autom√°ticamente de presencia en la web,
registro de las respuestas de los jugadores y, adem√°s, de jugabilidad a trav√©s de
la l√≠nea de comandos (principalmente para pruebas).&lt;/p&gt;
&lt;p&gt;Y con m√°s o menos √©xito, con muchos cambios y mejoras a√∫n pendientes, el objetivo
creo que se ha cumplido y lo pod√©is ver funcionando en la &lt;a class="reference external" href="http://games.lingwars.com/"&gt;web&lt;/a&gt;.
Como siempre, tambi√©n ten√©is disponible el &lt;a class="reference external" href="https://github.com/lingwars/lingwars-games"&gt;c√≥digo fuente en Github&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="arquitectura"&gt;
&lt;h2&gt;Arquitectura&lt;/h2&gt;
&lt;p&gt;El proyecto est√° dividido en dos partes diferenciadas:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;el &lt;strong&gt;n√∫cleo&lt;/strong&gt; con el motor para ejecutar los juegos y la aplicaci√≥n web,&lt;/li&gt;
&lt;li&gt;los &lt;strong&gt;juegos&lt;/strong&gt; propiamente dichos.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;B√°sicamente he propuesto una arquitectura donde los juegos se a√±aden como &lt;em&gt;plugins&lt;/em&gt;
y podr√≠an ser tanto clases aisladas como aplicaciones de Django que hicieran uso de
la base de datos. En la primera versi√≥n ya planteo un ejemplo ilustrativo de cada
una de estas opciones.&lt;/p&gt;
&lt;p&gt;El &lt;strong&gt;n√∫cleo&lt;/strong&gt; est√° formado por la aplicaci√≥n &lt;code&gt;appweb.engine&lt;/code&gt; que se encarga de
buscar juegos en los directorios indicados en la configuraci√≥n:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="n"&gt;LINGWARS_GAMES_DIRS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BASE_DIR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'../games'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Este motor buscar√° identificar juegos en las aplicaciones instaladas
(&lt;a class="reference external" href="https://github.com/Lingwars/lingwars-games/blob/7e2a3b0cbad1ad3ce08d39e92d8299f4c627a9ea/appweb/engine/apps.py#L29-L47"&gt;ver&lt;/a&gt;):&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="c1"&gt;# Registered apps&lt;/span&gt;
&lt;span class="n"&gt;app_games_module&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;apps&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_app_configs&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GameConfig&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;app_games_module&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__path__&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s2"&gt; - &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rsplit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'.'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;game_model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;available&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;RuntimeError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;A game with id '&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;' already exists&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;game&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_game&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;assert_game&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;game&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;created&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;game_model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_or_create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;defaults&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'is_app'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;available&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;
        &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;
        &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;author&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;game&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'author'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;games&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;game&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;...y tambi√©n en los paquetes y archivos presentes en los directorios indicados
(&lt;a class="reference external" href="https://github.com/Lingwars/lingwars-games/blob/7e2a3b0cbad1ad3ce08d39e92d8299f4c627a9ea/appweb/engine/apps.py#L52-L72"&gt;ver&lt;/a&gt;):&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="c1"&gt;# Simple games, just a 'game.py' file inside dir&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;dir&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'LINGWARS_GAMES_DIRS'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[]):&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;current_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;abspath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;current_path&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;app_games_module&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="c1"&gt;#log.debug(u&amp;quot;\t%s already included as app-game&amp;quot; % current_path)&lt;/span&gt;
            &lt;span class="k"&gt;pass&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;module&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;.game'&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;game&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;import_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;assert_game&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;game&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s2"&gt; - &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

                &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;created&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;game_model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_or_create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;defaults&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;game&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;'is_app'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
                &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;available&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;
                &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
                &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;games&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;game&lt;/span&gt;
            &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;ImportError&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;warn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s2"&gt; - &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;: does not contain a game object&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;En el primer caso las aplicaciones deber√°n ser instancias de una clase &lt;code&gt;GameConfig&lt;/code&gt; que debe proporcionar
una instancia del juego. En el segundo caso los juegos deben estar disponibles como un objeto llamado
&lt;code&gt;game&lt;/code&gt; en la ra√≠z del paquete.&lt;/p&gt;
&lt;p&gt;Para los dos casos se realiza una comprobaci√≥n para cerciorarse de que el objeto devuelto
tiene una interfaz v√°lida para jugar, es decir, implementa un c√≥digo como este:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyAwesomeGame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GameBase&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;My Awesome Game&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;author&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Me myself&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;description&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;In this game you blablabla&amp;quot;&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;make_question&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;question&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;query&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Question to the user&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;options&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;list&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;of&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;answers&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;answer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;correct&lt;/span&gt; &lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;# Esto debe ser el √≠ndice de la respuesta correcta en la lista.&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Some info to the user&amp;quot;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;question&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;score&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_answer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# Check the `user_answer`, it should be equal to response[&amp;#39;answer&amp;#39;]&lt;/span&gt;
        &lt;span class="c1"&gt;# :param:`response` contains the same data created in `make_question`&lt;/span&gt;
        &lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;user_answer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;answer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;answer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="resultados"&gt;
&lt;h2&gt;Resultados&lt;/h2&gt;
&lt;p&gt;Con un trozo de c√≥digo tan sencillo como √©ste, el sistema se encarga de a√±adir el juego
a la p√°gina principal, proponer una interfaz de juego (actualmente s√≥lo para juegos de
tipo &lt;em&gt;multiple choice&lt;/em&gt;), recoger estad√≠sticas de uso y crear un ranking.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="P√°gina principal" src="https://jgsogo.es/images/lingwars_games-main_page.png" /&gt;
&lt;p class="caption"&gt;En la p√°gina principal aparecen todos los juegos que no han sido desactivados en la
interfaz de administraci√≥n.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Playing a game" src="https://jgsogo.es/images/lingwars_games-play.png" /&gt;
&lt;p class="caption"&gt;Cada juego dispone de tres pesta√±as: una de informaci√≥n que muestra el hist√≥rico de
utilizaci√≥n del juego, otra donde se plantea el juego (esta) y una tercera que
muestra la clasificaci√≥n de los usuarios registrados que la han utilizado.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Conf√≠o en que pronto haya m√°s desaf√≠os y juegos, y de mucha m√°s calidad que los que
he planteado como ejemplo. Pero mientras tanto:
&lt;a class="reference external" href="http://games.lingwars.com/"&gt;jugad, jugad y poneos a prueba&lt;/a&gt;. ¬°Aceptad el reto!&lt;/p&gt;
&lt;/div&gt;
</content><category term="Bio"></category><category term="lingwars"></category><category term="django"></category><category term="architecture"></category><category term="plugins"></category></entry><entry><title>Circulaciones de trenes (RENFE)</title><link href="https://jgsogo.es/renfe-project-trains.html" rel="alternate"></link><published>2015-09-01T15:00:00+02:00</published><updated>2015-09-01T15:00:00+02:00</updated><author><name>Javier G. Sogo</name></author><id>tag:jgsogo.es,2015-09-01:/renfe-project-trains.html</id><summary type="html">
&lt;p&gt;Una fuente de informaci√≥n important√≠sima para el &lt;a class="reference external" href="https://jgsogo.es/renfe-project.html"&gt;proyecto RENFE&lt;/a&gt; son los horarios de los trenes, gracias a
ellos he podido estimar la zona que debe ocupar cada estaci√≥n (algoritmo de trilateraci√≥n) identificando
errores de posicionamiento gracias a los tiempos de circulaci√≥n entre estaciones. Sin embargo, esta
informaci√≥n no es facilitada ‚Ä¶&lt;/p&gt;</summary><content type="html">
&lt;p&gt;Una fuente de informaci√≥n important√≠sima para el &lt;a class="reference external" href="https://jgsogo.es/renfe-project.html"&gt;proyecto RENFE&lt;/a&gt; son los horarios de los trenes, gracias a
ellos he podido estimar la zona que debe ocupar cada estaci√≥n (algoritmo de trilateraci√≥n) identificando
errores de posicionamiento gracias a los tiempos de circulaci√≥n entre estaciones. Sin embargo, esta
informaci√≥n no es facilitada por RENFE en un formato adecuado sino que hay que extraerla a trav√©s de los
formularios de su web. Pod√©is haceros una idea de la t√©cnica empleada.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Horario del tren MD 18001." src="https://jgsogo.es/images/renfe-trains-timetable.png"/&gt;
&lt;p class="caption"&gt;Horario del tren MD 18001 entre Madrid y Valladolid (Fuente: &lt;a class="reference external" href="http://horarios.renfe.com/HIRRenfeWeb/recorrido.do?O=17000&amp;amp;D=10600&amp;amp;F=01-09-2015&amp;amp;T=18001&amp;amp;G=1&amp;amp;TT=MD&amp;amp;ID=s&amp;amp;FDS=2015-06-14&amp;amp;DT=2%20h.%2052%20min."&gt;RENFE&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;De esta forma, a trav√©s de la web de RENFE, puedo conocer en qu√© estaciones hace parada cada tren y los horarios
de llegada y de salida. En total, a lo largo de una semana, he obtenido que se mueven unas 1100
composiciones distintas desde 5500 cabeceras. ¬øMuchas? ¬øPocas? Eso lo podremos ver en el mapa din√°mico con
los movimientos de los trenes.&lt;/p&gt;
&lt;div class="section" id="los-trenes"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id1"&gt;Los trenes&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="tipos-de-trenes"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id2"&gt;Tipos de trenes&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Me ha sorprendido la cantidad de tipos de trenes que aparecen. La lista completa la forman 26 tipos distintos: &lt;tt class="docutils literal"&gt;ALSA&lt;/tt&gt;,
&lt;tt class="docutils literal"&gt;ALSINA&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;ALTARIA&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;ALVIA&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;AV City&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;AVANT&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;AVE&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;AVE-TGV&lt;/span&gt;&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;BAILE BUS&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;BUS ALOSA&lt;/tt&gt;,
&lt;tt class="docutils literal"&gt;CERCANIAS&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;EUROMED&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;FRS&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;INTERCITY&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;LD-AVE&lt;/span&gt;&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;MD&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;R. EXPRES&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;REG ESP&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;REG EXP&lt;/tt&gt;,
&lt;tt class="docutils literal"&gt;REG. EXP&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;REG. EXP.&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;REGIONAL&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;TALGO&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;TRENCELTA&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;TRENHOTEL&lt;/tt&gt; y &lt;tt class="docutils literal"&gt;VIA ESTRE&lt;/tt&gt;. Se puede observar
que los nombres no est√°n homogeneizados (hay cinco forma de hacer referencia a los Regional Express) y adem√°s, me
ha sorprendido mucho ver que RENFE opera algunos autobuses ¬°!.&lt;/p&gt;
&lt;p&gt;El caso es que tanta fragmentaci√≥n no es √∫til, yo he decidido agruparlos en las tipolog√≠as cl√°sicas m√°s
pr√≥ximas al entendimiento com√∫n:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;AVE: &lt;tt class="docutils literal"&gt;AVE&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;AVE-TGV&lt;/span&gt;&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;LD-AVE&lt;/span&gt;&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;AV City&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;Alta Velocidad (no AVE): &lt;tt class="docutils literal"&gt;ALTARIA&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;ALVIA&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;AVANT&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;EUROMED&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;Larga distancia: &lt;tt class="docutils literal"&gt;TALGO&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;TRENHOTEL&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;Media distancia: &lt;tt class="docutils literal"&gt;INTERCITY&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;MD&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;Regionales: &lt;tt class="docutils literal"&gt;R. EXPRES&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;REG ESP&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;REG EXP&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;REG. EXP&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;REG. EXP.&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;REGIONAL&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;Cercan√≠as: &lt;tt class="docutils literal"&gt;CERCANIAS&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;Otros trenes: &lt;tt class="docutils literal"&gt;TRENCELTA&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;VIA ESTRE&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;Autobuses: &lt;tt class="docutils literal"&gt;ALSA&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;ALSINA&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;BAILE BUS&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;BUS ALOSA&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;Ferry: &lt;tt class="docutils literal"&gt;FRS&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="horarios-de-trenes"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id3"&gt;Horarios de trenes&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Una vez obtenida la informaci√≥n de RENFE, he preparado unas clases para acceder a los datos de forma ordenada,
de tal forma que se puedan hacer las consultas por identificador de tren, por parada, d√≠a de la semana,...&lt;/p&gt;
&lt;p&gt;Gracias a estos horarios tambi√©n puedo estimar las distancias entre estaciones y ayudar al algoritmo de
posicionamiento de las mismas a detectar errores.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="trenes-compuestos"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id4"&gt;Trenes compuestos&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Un problema que he encontrado y que a√∫n no he resuelto son los trenes que se unen o se separan en ciertas
estaciones, ocurre a menudo con los de alta velocidad que suben a Galicia. La dificultad radica en que estos
trenes tienen el mismo identificador durante todo su recorrido para ambas ramas.&lt;/p&gt;
&lt;p&gt;Otra cosa m√°s de trabajo pendiente :/&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="mas-sobre-el-proyecto"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id5"&gt;M√°s sobre el proyecto&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;El proyecto se desarrolla en los siguientes art√≠culos:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Mapa din√°mico de circulaciones (&lt;a class="reference external" href="https://jgsogo.es/renfe-project.html"&gt;ver art√≠culo&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Geolocalizaci√≥n de estaciones (ADIF) (&lt;a class="reference external" href="https://jgsogo.es/renfe-project-geo-stations.html"&gt;ver art√≠culo&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;La infraestructura ferroviaria (ADIF) (&lt;a class="reference external" href="https://jgsogo.es/renfe-project-lines.html"&gt;ver art√≠culo&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Circulaciones de trenes (RENFE)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="Projects"></category><category term="renfe"></category><category term="railway"></category><category term="geo"></category><category term="cartodb"></category></entry><entry><title>La infraestructura ferroviaria (ADIF)</title><link href="https://jgsogo.es/renfe-project-lines.html" rel="alternate"></link><published>2015-08-31T18:34:00+02:00</published><updated>2015-08-31T18:34:00+02:00</updated><author><name>Javier G. Sogo</name></author><id>tag:jgsogo.es,2015-08-31:/renfe-project-lines.html</id><summary type="html">
&lt;p&gt;El primer paso del &lt;a class="reference external" href="https://jgsogo.es/renfe-project.html"&gt;proyecto RENFE&lt;/a&gt; consisti√≥ en
&lt;a class="reference external" href="https://jgsogo.es/renfe-project-geo-stations.html"&gt;posicionar las estaciones&lt;/a&gt;. Una vez realizada esta tarea
puedo construir un mapa con los recorridos de los trenes utilizando la informaci√≥n de horarios y paradas que
aparece en la web de RENFE. De esta forma puedo construir el trayecto seguido por un ‚Ä¶&lt;/p&gt;</summary><content type="html">
&lt;p&gt;El primer paso del &lt;a class="reference external" href="https://jgsogo.es/renfe-project.html"&gt;proyecto RENFE&lt;/a&gt; consisti√≥ en
&lt;a class="reference external" href="https://jgsogo.es/renfe-project-geo-stations.html"&gt;posicionar las estaciones&lt;/a&gt;. Una vez realizada esta tarea
puedo construir un mapa con los recorridos de los trenes utilizando la informaci√≥n de horarios y paradas que
aparece en la web de RENFE. De esta forma puedo construir el trayecto seguido por un tren cualquiera, por un
tipo de trenes o por todos ellos y, lo que es m√°s importante, puedo saber qu√© estaciones est√°n conectadas
con cuales, lo que me permitir√° construir &lt;strong&gt;el grafo de la infraestructura&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Mapa de conexiones de los trenes ALVIA de RENFE" src="https://jgsogo.es/images/renfe-lines-alvia-with-errors.png"/&gt;
&lt;p class="caption"&gt;Grafo de conexiones de los trenes ALVIA de RENFE, se muestra con colores el n√∫mero de composiciones
que hacen uso de cada conexi√≥n.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="deteccion-de-errores"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id1"&gt;Detecci√≥n de errores&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;En el gr√°fico anterior se puede ver un dibujo esquem√°tico de las conexiones que cubren los trenes ALVIA,
en √©l se aprecian dos errores claros de posicionamiento de las estaciones. Uno de ellos est√° en el trayecto
entre C√≥rdoba y M√°laga donde se realizan paradas en Puente Genil (correctamente situado en el mapa)
y Antequera (que aparece erroneamente en Valencia); el otro est√° relacionado con una estaci√≥n gallega
que aparece en tierras c√°ntabras.&lt;/p&gt;
&lt;p&gt;Podemos detectar estos errores de dos formas:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Visualmente: en el caso anterior est√° claro que Antequera es un error de posicionamiento.&lt;/li&gt;
&lt;li&gt;Con un algoritmo: puesto que tengo los horarios de los trenes puedo calcular la velocidad a la
cual deber√≠an viajar para recorrer la distancia entre cada par de estaciones, si esta velocidad
est√° fuera de unos rangos normales sabr√© que alguna de las estaciones (origen o destino) est√°
mal posicionada, ejecutando el algoritmo para todos los pares de estaciones puedo resolver la ambig√ºedades.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Una vez que he detectado las estaciones mal posicionadas puedo utilizar el
&lt;a class="reference external" href="{filename}/Algorithms/trilateration_with_errors.rst"&gt;algoritmo de trilateraci√≥n&lt;/a&gt;
para calcular su posici√≥n correcta o bien solucionar el problema manualmente.&lt;/p&gt;
&lt;p&gt;Con los datos corregidos ya puedo generar mapas con las conexiones directas entre estaciones
seg√∫n el tipo de tren como es el caso de la siguiente figura donde aparecen las conexiones
de trenes MD, TALGO y Tren Hotel.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Mapa de conexiones de los trenes MD, TALGO y Tren Hotel" src="https://jgsogo.es/images/renfe-lines-md-talgo-trenhotel.png"/&gt;
&lt;p class="caption"&gt;Mapa de conexiones de los trenes MD (naranja), TALGO (rojo) y Tren Hotel (verde) de RENFE; en blanco se
muestran las estaciones donde hacen parada.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="grafo-de-lineas"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id2"&gt;Grafo de l√≠neas&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;El objetivo que persigo en esta parte es construir un grafo con toda la infraestructura ferroviaria
espa√±ola, donde los nodos sean las estaciones y las uniones entre l√≠neas y los arcos sean las v√≠as
que los conectan. Idealmente cada arco y nodo podr√° tener sus atributos indicando si est√° electrificado,
cu√°l es la velocidad m√°xima, ancho de v√≠a, distancia,...&lt;/p&gt;
&lt;p&gt;Para lograr realizar este grafo me tengo que apoyar en los grafos por tipo de tren del apartado anterior
para saber qu√© estaciones est√°n conectadas con cu√°les, pero la dificultad estriba en relacionar esas
estaciones con la infraestructura subyacente.&lt;/p&gt;
&lt;p&gt;Como indiqu√© en el art√≠culo de introducci√≥n, gracias a &lt;a class="reference external" href="https://astroide.cartodb.com/maps"&gt;Astroide&lt;/a&gt; he conseguido la informaci√≥n de las
l√≠neas, pero no se incluyen las estaciones ni las uniones entre l√≠neas.&lt;/p&gt;
&lt;div class="section" id="posicion-de-las-estaciones-sobre-las-lineas"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id3"&gt;Posici√≥n de las estaciones sobre las l√≠neas&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Una vez que he realizado el trabajo de posicionamiento de las estaciones en el mapa puedo proyectarlas
sobre la l√≠nea m√°s cercana, son unos c√°lculos triviales utilizando la librer√≠a &lt;a class="reference external" href="http://toblerity.org/shapely/manual.html"&gt;shapely&lt;/a&gt;. Esta proyecci√≥n
que ya hicimos en el art√≠culo sobre (&lt;a class="reference external" href="https://jgsogo.es/renfe-project-geo-stations.html"&gt;estaciones&lt;/a&gt;) nos
sirve tambi√©n para validar el posicionamiento de las mismas.&lt;/p&gt;
&lt;p&gt;Ser√≠a muy interesante contar con las l√≠neas de Portugal (algunas estaciones pertenecen a este pa√≠s) y
con la informaci√≥n de v√≠as desmanteladas para validar la posici√≥n de estaciones en desuso.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="cruces-entre-lineas"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id4"&gt;Cruces entre l√≠neas&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;El otro algoritmo que he aplicado sobre las l√≠neas es el c√°lculo de las intersecciones que se producen
entre ellas buscando puntos comunes. Este algoritmo identifica tres tipos de puntos comunes:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;las intersecciones entre l√≠neas: lugares donde una l√≠nea pasa sobre otra sin que haya uni√≥n entre ambas.&lt;/li&gt;
&lt;li&gt;los puntos de uni√≥n: lugares donde dos v√≠as se unen para formar una sola (o separan).&lt;/li&gt;
&lt;li&gt;los empalmes: lugares donde empieza una v√≠a a continuaci√≥n de otra.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Intersecciones entre l√≠neas en las proximidades de Le√≥n." src="https://jgsogo.es/images/renfe-lines-leon.png"/&gt;
&lt;p class="caption"&gt;Mapa de intersecciones entre l√≠neas (puntos blancos) en las proximidades de la ciudad de Le√≥n.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Sin embargo la casu√≠stica es muy grande y hay muchos errores en los que a√∫n tengo que trabajar:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Falsos positivos&lt;/strong&gt;: los cruces entre l√≠neas sin uni√≥n entre ellas no deben ser inclu√≠dos en el grafo resultante.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Falsos negativos&lt;/strong&gt;: uniones entre l√≠neas que no comparten ning√∫n punto geom√©trico com√∫n por redondeos u
errores en los datos. El algoritmo debe permitir cierto error a la hora de identificar los cruces (sin
introducir m√°s falsos positivos).&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="admonition warning"&gt;
&lt;p class="first admonition-title"&gt;Advertencia&lt;/p&gt;
&lt;p class="last"&gt;El resultado con el grafo final tendr√° que esperar un poco m√°s, a√∫n est√° en construcci√≥n.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="mas-sobre-el-proyecto"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id5"&gt;M√°s sobre el proyecto&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;El proyecto se desarrolla en los siguientes art√≠culos:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Mapa din√°mico de circulaciones (&lt;a class="reference external" href="https://jgsogo.es/renfe-project.html"&gt;ver art√≠culo&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Geolocalizaci√≥n de estaciones (ADIF) (&lt;a class="reference external" href="https://jgsogo.es/renfe-project-geo-stations.html"&gt;ver art√≠culo&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;La infraestructura ferroviaria (ADIF)&lt;/li&gt;
&lt;li&gt;Circulaciones de trenes (RENFE) (&lt;a class="reference external" href="https://jgsogo.es/renfe-project-trains.html"&gt;ver art√≠culo&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="Projects"></category><category term="renfe"></category><category term="railway"></category><category term="geo"></category><category term="cartodb"></category></entry><entry><title>Geolocalizaci√≥n de estaciones (ADIF)</title><link href="https://jgsogo.es/renfe-project-geo-stations.html" rel="alternate"></link><published>2015-08-27T18:34:00+02:00</published><updated>2015-08-27T18:34:00+02:00</updated><author><name>Javier G. Sogo</name></author><id>tag:jgsogo.es,2015-08-27:/renfe-project-geo-stations.html</id><summary type="html">
&lt;p&gt;Dentro del &lt;a class="reference external" href="https://jgsogo.es/renfe-project.html"&gt;proyecto RENFE&lt;/a&gt; una de las partes m√°s importantes es determinar la posici√≥n de las
estaciones en el mapa (latitud y longitud). Una vez m√°s tengo que reunir informaci√≥n de diversas
fuentes y hacerla coherente para generar el &lt;em&gt;dataset&lt;/em&gt; que necesito, en concreto voy a utilizar
las siguientes fuentes ‚Ä¶&lt;/p&gt;</summary><content type="html">
&lt;p&gt;Dentro del &lt;a class="reference external" href="https://jgsogo.es/renfe-project.html"&gt;proyecto RENFE&lt;/a&gt; una de las partes m√°s importantes es determinar la posici√≥n de las
estaciones en el mapa (latitud y longitud). Una vez m√°s tengo que reunir informaci√≥n de diversas
fuentes y hacerla coherente para generar el &lt;em&gt;dataset&lt;/em&gt; que necesito, en concreto voy a utilizar
las siguientes fuentes:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.renfe.com/"&gt;Renfe&lt;/a&gt;: en su web podemos consultar un listado de estaciones.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://adif.es"&gt;ADIF&lt;/a&gt;: en la secci√≥n "infraestructuras y estaciones" se pueden obtener las coordenadas GPS
de algunas estaciones.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.laestaciondetren.net/"&gt;La Estaci√≥n de Tren&lt;/a&gt;: ofrece un listado de estaciones con coordenadas GPS etiquetadas manualmente.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/jgcasta/railopendata"&gt;Github - railopendata&lt;/a&gt;: con datos georreferenciados de estaciones y l√≠neas.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Una vez obtenida la informaci√≥n de estas fuentes tengo que utilizar algunos &lt;strong&gt;algoritmos&lt;/strong&gt; para
relacionarlos, hacerlos coherentes y completarlos. Y por supuesto, un poquito de ayuda manual
nunca les va a venir mal.&lt;/p&gt;
&lt;div class="section" id="listado-de-estaciones"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id5"&gt;Listado de estaciones&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;La primera tarea que hay que realizar es obtener la lista (lo m√°s completa posible) de estaciones. En
la web de Renfe tenemos un link &lt;a class="footnote-reference" href="#id2" id="id1"&gt;[1]&lt;/a&gt;, de donde se puede obtener con un simple &lt;em&gt;script&lt;/em&gt; un primer listado.&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id2" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"/&gt;&lt;col/&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;RENFE. Listado de estaciones. URL: &lt;a class="reference external" href="https://venta.renfe.com/vol/estacionesAccesibleVXY.do"&gt;https://venta.renfe.com/vol/estacionesAccesibleVXY.do&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Cada estaci√≥n tiene un nombre y un identificador. Este identificador es √∫nico y est√° formado por 5 d√≠gitos,
sin embargo, en algunos casos se incorporan letras cuando no se trata de una estaci√≥n concreta sino una ciudad
que dispone de varias estaciones: &lt;code&gt;MADRI&lt;/code&gt; para Madrid, &lt;code&gt;IRUN-&lt;/code&gt; para Ir√∫n-Hendaya,... en cualquier
caso, cada estaci√≥n de la ciudad posee un identificador num√©rico √∫nico.&lt;/p&gt;
&lt;p&gt;Los identificadores num√©ricos, donde aparecen, son la primera opci√≥n para identificar las estaciones; sin
embargo, en muchos otros casos, tendremos que utilizar los nombres y comparar de forma inexacta cadenas de
texto para identificar la estaci√≥n (ver &lt;a class="reference external" href="{filename}/Algorithms/fuzzy_string_comparison.md"&gt;comparaci√≥n inexacta de cadenas&lt;/a&gt;). Estos nombres alternativos
los guardaremos como &lt;em&gt;alias&lt;/em&gt; de la estaci√≥n para utilizarlos en b√∫squedas futuras.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="posicionamiento"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id6"&gt;Posicionamiento&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Una vez obtenido el listado de estaciones tengo que georreferenciarlas sobre el mapa. Como he indicado
m√°s arriba para esta tarea utilizo varias fuentes:&lt;/p&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id7"&gt;ADIF&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;En la web de ADIF se pueden consultar los datos GPS de algunas estaciones, extraerlos del HTML no es
complicado, tal y como se puede ver en la imagen siguiente:&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Coordenadas GPS de una estaci√≥n en la web de ADIF" src="https://jgsogo.es/images/renfe-stations-adif-gps.png"/&gt;
&lt;p class="caption"&gt;Coordenadas GPS de una estaci√≥n en la web de ADIF.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Sin embargo, las URLs de esta p√°gina siguen un patr√≥n que no he podido identificar, aparece un identificador
num√©rico al final que impide construirlas de forma autom√°tica. Algunos ejemplos:&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="5%"/&gt;
&lt;col width="13%"/&gt;
&lt;col width="82%"/&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;ID&lt;/th&gt;
&lt;th class="head"&gt;Nombre&lt;/th&gt;
&lt;th class="head"&gt;URL&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;23004&lt;/td&gt;
&lt;td&gt;Pontevedra&lt;/td&gt;
&lt;td&gt;&lt;a class="reference external" href="http://www.adif.es/es_ES/infraestructuras/estaciones/23004/informacion_000047.shtml"&gt;http://www.adif.es/es_ES/infraestructuras/estaciones/23004/informacion_000047.shtml&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;30002&lt;/td&gt;
&lt;td&gt;Plasencia&lt;/td&gt;
&lt;td&gt;&lt;a class="reference external" href="http://www.adif.es/es_ES/infraestructuras/estaciones/30002/informacion_000141.shtml"&gt;http://www.adif.es/es_ES/infraestructuras/estaciones/30002/informacion_000141.shtml&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;74200&lt;/td&gt;
&lt;td&gt;Huesca&lt;/td&gt;
&lt;td&gt;&lt;a class="reference external" href="http://www.adif.es/es_ES/infraestructuras/estaciones/74200/informacion_000099.shtml"&gt;http://www.adif.es/es_ES/infraestructuras/estaciones/74200/informacion_000099.shtml&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Como consecuencia de ese par√°metro debo utilizar alguna otra t√©cnica para acceder a las p√°ginas de
detalle de cada una de las estaciones: se puede utilizar un script que trabaje con el mapa, o partir de
la pesta√±a de "Llegadas y Salidas" a la que se puede acceder utilizando √∫nicamente el identificador de
la estaci√≥n (ej.: &lt;code&gt;http://www.adif.es/AdifWeb/estacion_mostrar.jsp?e=20213&lt;/code&gt;). Una vez ah√≠ se puede
parsear la web para obtener el link de la pesta√±a "Informaci√≥n" donde tenemos las coordenadas GPS.&lt;/p&gt;
&lt;p&gt;Podr√≠a parecer que aqu√≠ termina el trabajo, pero no es as√≠; en la web de ADIF aparecen solo
200-240 estaciones (depende de si hay trenes que llegan/salen a la hora de la consulta),
pero tengo que geoposicionar unas 1300.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Mapa de estaciones" src="https://jgsogo.es/images/renfe-stations-adif.png"/&gt;
&lt;p class="caption"&gt;Mapa de estaciones con las coordenadas GPS obtenidas de ADIF&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="railopendata"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id8"&gt;Railopendata&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Jos√© G√≥mez Casta√±o (&lt;a class="reference external" href="https://twitter.com/jgcasta"&gt;@jgcasta&lt;/a&gt;) mantiene un &lt;a class="reference external" href="https://github.com/jgcasta/railopendata"&gt;repositorio en Github&lt;/a&gt; con un conjunto no oficial de datos de
ferrocarril en el que aparecen las posiciones de las estaciones y las geometr√≠as de las l√≠neas. Los datos
son accesibles y est√°n en formato geoJSON por lo que resultan ideales para utilizarlos aqu√≠.&lt;/p&gt;
&lt;p&gt;Gracias a este repositorio de informaci√≥n logro posicionar ¬°932 estaciones! Sin duda este es un
recurso valios√≠simo al que andemas le concedo un alt√≠simo grado de credibilidad.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id9"&gt;La Estaci√≥n de Tren&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Fernando Solabre&lt;/strong&gt; es el autor de la web La Estaci√≥n de Tren, en la que se muestra un listado de 1915 estaciones
geolocalizadas manualmente e identificadas por el nombre que aparece en los mapas. El trabajo realizado merece
una menci√≥n especial y me va a permitir posicionar muchas estaciones.&lt;/p&gt;
&lt;p&gt;Para utilizar este dataset nos enfrentamos a dos dificultades: identificar la estaci√≥n y convertir las coordenadas
de UTM a longitud/latitud. Para la primera de ellas utilizaremos la comparaci√≥n inexacta de cadenas a la que
hemos hecho menci√≥n anteriormente, para la segunda utlizamos la librer√≠a de Python llamada &lt;a class="reference external" href="https://github.com/Turbo87/utm"&gt;utm&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Al automatizar el procesamiento de este conjunto de datos no tengo garant√≠as de que la identificaci√≥n de
las estaciones haya sido correcta, conf√≠o en que los algoritmos posteriores muestren incongruencias ante
un dato erroneo y me permita identificarlos.&lt;/p&gt;
&lt;p&gt;Gracias a La Estaci√≥n de Tren logro geoposicionar solo 25 estaciones de las que a√∫n me faltaban.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Mapa de estaciones" src="https://jgsogo.es/images/renfe-stations-laestaciondetren.png"/&gt;
&lt;p class="caption"&gt;Mapa de estaciones con las coordenadas GPS obtenidas de ADIF (naranja) y de La Estaci√≥n de Tren (azul)&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Sin embargo, existen unas muchas estaciones en este nuevo dataset que no es capaz de asociar a ninguna
de las existentes, ¬øno hay trenes que hagan paradas en ellas? ¬øTan diferentes son los nombres?
¬øPertenecen a v√≠as desmanteladas? Pues hay un poco de todo, ser√° una informaci√≥n muy interesante a tratar
cuando tenga los datos de las l√≠neas desmanteladas.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="buscadores-mapas"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id10"&gt;Buscadores/Mapas&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Una tercera v√≠a que he utilizado para geoposicionar las estaciones ha sido utlizar los servicios de
Internet que permiten obtener las coordenadas de un punto a partir de su direcci√≥n. Hay una
fant√°stica librer√≠a que nos permite hacerlo con facilidad: &lt;a class="reference external" href="https://github.com/geopy/geopy"&gt;geopy&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Como dato de entrada para todos estos servicios he utilizado el nombre de la estaci√≥n con lo cual la
fiabilidad de los resultados es bastante baja en ocasiones (se obtienen estaciones dispersas
por toda la Tierra, pero s√≥lo recoger√© los datos de aqu√©llas que caigan en el entorno de la Pen√≠nsula).&lt;/p&gt;
&lt;p&gt;Puesto que dispongo de varias respuestas para cada estaci√≥n puedo combinarlas para intentar mejorar
el resultado. As√≠ filtro los &lt;em&gt;outliers&lt;/em&gt; utilizando un test conocido como &lt;em&gt;median-absolute-deviation&lt;/em&gt; (&lt;a class="reference external" href="https://stackoverflow.com/questions/22354094/pythonic-way-of-detecting-outliers-in-one-dimensional-observation-data/22357811#22357811"&gt;MAD&lt;/a&gt;)
y posteriormente me quedo con la posici√≥n correspondiente a la media aritm√©tica de todas las respuestas.&lt;/p&gt;
&lt;p&gt;Con esta aproximaci√≥n no consigo localizar ninguna de las estaciones que a√∫n me quedan por posicionar :/
nivel de confianza que a las anteriores.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Mapa de estaciones" src="https://jgsogo.es/images/renfe-stations-imaps.png"/&gt;
&lt;p class="caption"&gt;Mapa de estaciones con las coordenadas GPS obtenidas de ADIF (naranja), La Estaci√≥n de Tren (azul)
y las extra√≠das de mapas de internet (verde).&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Tan s√≥lo me han quedado 85 estaciones sin geolocalizar, lo cual considero que es un muy buen resultado. Adem√°s
puedo comprobar que estas estaciones est√°n, en muchos casos, fuera de la Pen√≠nsula o bien incluyen en su nombre
la part√≠cula &lt;code&gt;-BUS&lt;/code&gt; o &lt;code&gt;(*)&lt;/code&gt; (indicando que se trata de una ciudad con varias estaciones). En el
primer caso la soluci√≥n es f√°cilmente programable, en el segundo caso se podr√≠a interpretar cu√°l es la estaci√≥n
correcta seg√∫n los tipos de trenes que la utilicen.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="estaciones-sin-datos"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id11"&gt;Estaciones sin datos&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Son muy pocas las estaciones que han quedado sin datos y para ellas he pensado aplicar un algoritmo probabil√≠stico
basado en la posici√≥n del resto de estaciones y en los horarios de los trenes que pasan por ellas. La idea es
calcular la zona en la cual es m√°xima la probabilidad de encontrar un tren tomando como par√°metros los tiempos
de paso por las estaciones adyacentes y su velocidad. B√°sicamente un problema
de &lt;strong&gt;trilateraci√≥n con errores en las medidas&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="section" id="trilateracion"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id12"&gt;Trilateraci√≥n&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;"La &lt;a class="reference internal" href="#trilateracion"&gt;trilateraci√≥n&lt;/a&gt; es un m√©todo matem√°tico para determinar las posiciones relativas de objetos usando la
geometr√≠a de tri√°ngulos de forma an√°loga a la triangulaci√≥n. [...] La trilateraci√≥n usa las localizaciones
conocidas de dos o m√°s puntos de referencia, y la distancia medida entre el sujeto y cada punto de
referencia" (&lt;a class="reference external" href="https://es.wikipedia.org/wiki/Trilateraci%C3%B3n"&gt;Wikipedia&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Puesto que tengo error en el c√°lculo de las distancias (no conozco la velocidad del tren, ni
las curvas que hace la v√≠a y tambi√©n puede haber error en el posicionamiento de la estaci√≥n) cada
una de ellas la voy a aproximar mediante una distribuci√≥n de probabilidad construida a partir de los datos
de todas las composiciones que hacen parada en dicha estaci√≥n.&lt;/p&gt;
&lt;p&gt;Este algoritmo de trilateraci√≥n os lo cuento en otro art√≠culo: (&lt;a class="reference external" href="{filename}/Algorithms/trilateration_with_errors.rst"&gt;ver art√≠culo&lt;/a&gt;)&lt;/p&gt;
&lt;!-- Hablar de los resultados. --&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="proyeccion-sobre-las-lineas"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id13"&gt;Proyecci√≥n sobre las l√≠neas&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Un √∫ltimo paso, que tambi√©n sirve para &lt;strong&gt;validar las posiciones de las estaciones&lt;/strong&gt; (al menos para
detectar falsos positivos), consiste en proyectar la posici√≥n de las estaciones sobre el
mapa de l√≠neas; de este modo si la distancia de la estaci√≥n a la v√≠a m√°s cercana supera cierto umbral
puedo pensar que la posici√≥n de partida era err√≥nea (o no tengo informaci√≥n sobre la
l√≠nea que pasa cerca de ese punto).&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Histograma con el error de posicionamiento de las estaciones" src="https://jgsogo.es/images/renfe-stations-histogram.png"/&gt;
&lt;p class="caption"&gt;Histograma (funci√≥n de densidad) con la distancia de las estaciones a la v√≠a m√°s pr√≥xima, seg√∫n el origen
del dato de posicionamiento.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Se puede observar c√≥mo los datos provinientes de la web de ADIF y los disponibles a trav√©s de &lt;a class="reference external" href="https://twitter.com/jgcasta"&gt;@jgcasta&lt;/a&gt;)
se proyectan sobre v√≠as que pasan muy
pr√≥ximas a ellos, los datos obtenidos de la web La Estaci√≥n de Tren parece que tienen un &lt;em&gt;bias&lt;/em&gt;, a√∫n as√≠
la gran mayor√≠a parecen pr√≥ximos a los datos de infraestructura de los que disponemos. Por el contrario,
cuando los datos los obtenemos utilizando el nombre de la estaci√≥n para buscar las coordenadas en mapas
de internet, la dispersi√≥n es mucho mayor, la funci√≥n de densidad presenta una cola extremadamente larga.
Se confirman las sospechas que ten√≠a sobre la calidad del origen de los datos.&lt;/p&gt;
&lt;p&gt;NOTA.- Los datos anteriores est√°n construidos es base al error de posicionamiento de las estaciones seg√∫n
la fuente de datos, pero en cada grupo no se consideran las estaciones ya posicionadas por otros m√©todos,
por lo tanto, si aplicara cada m√©todo al conjunto completo de estaciones se obtendr√≠an mayores densidades
con los errores m√°s peque√±os (o ese ser√≠a lo esperable).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="mas-sobre-el-proyecto"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id14"&gt;M√°s sobre el proyecto&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;El proyecto se desarrolla en los siguientes art√≠culos:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Mapa din√°mico de circulaciones (&lt;a class="reference external" href="https://jgsogo.es/renfe-project.html"&gt;ver art√≠culo&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Geolocalizaci√≥n de estaciones (ADIF)&lt;/li&gt;
&lt;li&gt;La infraestructura ferroviaria (ADIF) (&lt;a class="reference external" href="https://jgsogo.es/renfe-project-lines.html"&gt;ver art√≠culo&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Circulaciones de trenes (RENFE) (&lt;a class="reference external" href="https://jgsogo.es/renfe-project-trains.html"&gt;ver art√≠culo&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="Projects"></category><category term="renfe"></category><category term="railway"></category><category term="geo"></category><category term="cartodb"></category><category term="trilateration"></category></entry><entry><title>RENFE -- Mapa din√°mico de circulaciones</title><link href="https://jgsogo.es/renfe-project.html" rel="alternate"></link><published>2015-08-25T18:34:00+02:00</published><updated>2015-08-25T18:34:00+02:00</updated><author><name>Javier G. Sogo</name></author><id>tag:jgsogo.es,2015-08-25:/renfe-project.html</id><summary type="html">
&lt;p&gt;Hace unos d√≠as me propuse hacer un mapa din√°mico con &lt;a class="reference external" href="https://cartodb.com/"&gt;CartoDB&lt;/a&gt; en el que se
mostraran los trenes de RENFE movi√©ndose con la intenci√≥n de probar la herramienta y experimentar
con sus posibilidades. El caso es que el proyecto crece, los datos no est√°n tan disponibles como
uno quisiera y ‚Ä¶&lt;/p&gt;</summary><content type="html">
&lt;p&gt;Hace unos d√≠as me propuse hacer un mapa din√°mico con &lt;a class="reference external" href="https://cartodb.com/"&gt;CartoDB&lt;/a&gt; en el que se
mostraran los trenes de RENFE movi√©ndose con la intenci√≥n de probar la herramienta y experimentar
con sus posibilidades. El caso es que el proyecto crece, los datos no est√°n tan disponibles como
uno quisiera y empiezan a aparecer los famosos &lt;em&gt;"ya que..."&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Durante la recogida de datos para este mapa surgen algunas ideas relacionadas como la construcci√≥n
de un grafo con la infraestructura de transporte para realizar an√°lisis que permitan optimizar
costes, tiempos, o estudiar problemas en la infraestructura. Es de imaginar que ADIF dispone de
algo parecido y lo utiliza, as√≠ que el objetivo es fundamentalmente exploratorio para empezar a
estudiar sistemas de transporte &lt;a class="footnote-reference" href="#id2" id="id1"&gt;[1]&lt;/a&gt;.&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id2" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"/&gt;&lt;col/&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Andrew Sherratt, 2005. Portages. &lt;a class="reference external" href="http://www.archatlas.org/Portages/Portages.php"&gt;http://www.archatlas.org/Portages/Portages.php&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class="section" id="ideas-previas"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id4"&gt;Ideas previas&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Como siempre lo primero es buscar un poco por Internet para ver qui√©n ha hecho algo ya y, como siempre,
sin necesidad de bucear demasiado, aparecen algunos buenos resultados:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://twitter.com/victorianoi"&gt;Victoriano&lt;/a&gt; tiene un mapa donde muestra los &lt;a class="reference external" href="https://victoriano-v21.cartodb.com/viz/aac847aa-e882-11e2-bc2b-d90ab36db2dd/public_map"&gt;trenes de larga distancia en 2013&lt;/a&gt; (ver imagen m√°s abajo),
sin embargo no es exactamente lo que busco. De todos modos, una pena que los datasets sean privados.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Renfe - Trenes de larga distancia 2013" src="https://jgsogo.es/images/renfe-stations-victoriano.png"/&gt;
&lt;p class="caption"&gt;&lt;strong&gt;Renfe - Trenes de larga distancia 2013&lt;/strong&gt;.
Los puntos naranjas son la estaciones seg√∫n el n¬∫ de trenes que salen de esa estaci√≥n.
El azul es el n¬∫ de conexiones posibles con billete √∫nico que vende Renfe en viaje directo
o con transbordo. Autor: &lt;a class="reference external" href="https://twitter.com/victorianoi"&gt;Victoriano&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Buscando un poco m√°s encontramos los mapas de &lt;a class="reference external" href="https://astroide.cartodb.com/maps"&gt;Astroide&lt;/a&gt;, otro usuario de CartoDB que nos ofrece unos
mapas mucho m√°s interesantes para lo que quiero hacer, y que adem√°s ofrece p√∫blicamente los
datasets: un mapa din√°mico con los &lt;a class="reference external" href="https://astroide.cartodb.com/viz/83f346cc-18bc-11e5-a62d-0e9d821ea90d/public_map"&gt;trenes de largo recorrido&lt;/a&gt; y otro con los &lt;a class="reference external" href="https://astroide.cartodb.com/viz/5b6b5838-1aa7-11e5-858b-0e018d66dc29/public_map"&gt;trenes de mercancias&lt;/a&gt;,
que reproduzco a continuaci√≥n:&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Renfe - Trenes de larga distancia" src="https://jgsogo.es/images/renfe-stations-astroide-largadistancia.png"/&gt;
&lt;p class="caption"&gt;&lt;strong&gt;Renfe - Trenes de Larga Distancia&lt;/strong&gt;.
Recorrido efectuado por trenes de Larga Distancia. Estudio del uso de bases de datos NoSQL en
la Fundaci√≥n de los Ferrocarriles Espa√±oles. Autor: &lt;a class="reference external" href="https://astroide.cartodb.com/maps"&gt;Astroide&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Renfe - Trenes de mercancias" src="https://jgsogo.es/images/renfe-stations-astroide-mercancias.png"/&gt;
&lt;p class="caption"&gt;&lt;strong&gt;Trenes de mercanc√≠as&lt;/strong&gt;.
Reconstrucci√≥n del movimiento de los trenes de mercanc√≠as. Estudio del uso de bases de datos NoSQL en
la Fundaci√≥n de los Ferrocarriles Espa√±oles. Autor: &lt;a class="reference external" href="https://astroide.cartodb.com/maps"&gt;Astroide&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Estos dos mapas son p√∫blicos y los datasets pueden descargarse, uno de ellos me ser√° de much√≠sima
utilidad: la informaci√≥n con las l√≠neas de la infraestructura, ¬øest√°n todas las l√≠neas activas? Por
si acaso contacto con el usuario para confirmarlo y para saber si puede tambi√©n proporcionarme los
datos de las l√≠neas desmanteladas que ya no est√°n operativas.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Los mapas de Astroide muestran b√°sicamente el resultado al que quiero llegar, pero el problema que
me planteo no es tanto obtener el mapa como disfrutar del camino hasta conseguirlo. Adem√°s, echo de
menos los trenes de media distancia y regionales, ¬°y las estaciones!. Me pregunto: ¬øc√≥mo quedar√° el
mapa si se combinan todos estos trenes en una √∫nica visualizaci√≥n y mostramos tambi√©n las estaciones?&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="definicion-del-problema"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id5"&gt;Definici√≥n del problema&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;El reto sigue presente a pesar de los recursos que se han encontrado: para realizar mi mapa din√°mico con
las circulaciones de trenes necesito posicionar las estaciones, conseguir los horarios de los trenes y
luego muestrear su posici√≥n a lo largo de un d√≠a o de una semana para mostrarlos en el mapa.&lt;/p&gt;
&lt;div class="section" id="la-infraestructura-estaciones-y-lineas"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id6"&gt;La infraestructura: estaciones y l√≠neas&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Uno de los primeros pasos que me propongo dar es crear un mapa est√°tico con la infraestructura, b√°sicamente
reproducir la capa de ferrocarriles que supongo que estar√° disponible en muchos GIS. Para ello necesito:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;los recorridos de las l√≠neas (&lt;a class="reference external" href="https://jgsogo.es/renfe-project-lines.html"&gt;ver art√≠culo&lt;/a&gt;), y&lt;/li&gt;
&lt;li&gt;la posici√≥n de las estaciones (&lt;a class="reference external" href="https://jgsogo.es/renfe-project-geo-stations.html"&gt;ver art√≠culo&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;En la infraestructura quiero mostrar tanto las l√≠neas que actualmente est√°n en funcionamiento como las
l√≠neas que ya han sido desmanteladas. Asimismo quiero diferenciar por colores seg√∫n los anchos (FEVE,
m√©trico, internacional, ib√©rico) y tambi√©n identificar qu√© tramos est√°n electrificados.&lt;/p&gt;
&lt;p&gt;En cuanto a las estaciones, el objetivo ser√° mostrar en el mapa la posici√≥n de todos los edificios
que hayan ofrecido este servicio. Podr√≠an categorizarse en funci√≥n de las prestaciones de cada uno
de ellos: accesibilidad, √°rea comercial,...&lt;/p&gt;
&lt;p&gt;Una vez que tenga disponibles estos datos visuales, el objetivo ser√° crear un &lt;strong&gt;grafo de la infraestructura
donde los nodos sea estaciones o bifurcaciones y los arcos est√©n formados por los itinerarios&lt;/strong&gt;. Gracias
a este grafo se podr√°n reconstruir las circulaciones de trenes entre estaciones no contiguas, analizar la
demanda de la infraestructura, las consecuencias de fallos en el servicio, alternativas de recuperaci√≥n, etc.
No obstante, su construcci√≥n resulta compleja, tal y como se mostrar√° en el art√≠culo correspondiente.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Visualizaci√≥n de un sistema de transporte sobre el mapa de Europa" src="https://jgsogo.es/images/jgraph-transport-system.png"/&gt;
&lt;p class="caption"&gt;Visualizaci√≥n como grafo de una red de transporte sobre el mapa de Europa. Fuente: &lt;a class="reference external" href="https://jgraph.github.io/mxgraph/docs/manual_javavis.html"&gt;JGraphX User Manual&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="circulaciones-de-trenes"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id7"&gt;Circulaciones de trenes&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;El otro elemento del mapa son los datos de explotaci√≥n de la infraestructura: la circulaci√≥n de los
trenes. Necesito obtener los horarios de todos ellos (estaciones, hora de salida y llegada,...)
para poder identificar en qu√© lugar se encuentran en cada momento.&lt;/p&gt;
&lt;p&gt;RENFE no ofrece esta informaci√≥n de una forma amigable a trav√©s de alg√∫n tipo de API, tampoco es una
informaci√≥n que haya encontrado en alguna web de la administraci√≥n como &lt;a class="reference external" href="http://datos.gob.es/"&gt;datos.gob.es&lt;/a&gt;, as√≠ que
habr√° que obtenerlos de alguna otra manera (scraping).&lt;/p&gt;
&lt;p&gt;Estos datos de los trenes se podr√°n combinar con los datos del grafo de la infraestructura (y
ayudar√°n tambi√©n a construirlo) para generar el mapa din√°mico pretendido. Adem√°s,
la informaci√≥n disponible de esta manera permitir√° realizar diferentes estudios.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="mas-sobre-el-proyecto"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id8"&gt;M√°s sobre el proyecto&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;El proyecto se desarrolla en los siguientes art√≠culos:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Geolocalizaci√≥n de estaciones (ADIF) (&lt;a class="reference external" href="https://jgsogo.es/renfe-project-geo-stations.html"&gt;ver art√≠culo&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;La infraestructura ferroviaria (ADIF) (&lt;a class="reference external" href="https://jgsogo.es/renfe-project-lines.html"&gt;ver art√≠culo&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Circulaciones de trenes (RENFE) (&lt;a class="reference external" href="https://jgsogo.es/renfe-project-trains.html"&gt;ver art√≠culo&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="Projects"></category><category term="renfe"></category><category term="railway"></category><category term="geo"></category><category term="cartodb"></category></entry><entry><title>WordNet-blast. Con boost::add_edge hemos topado.</title><link href="https://jgsogo.es/wordnet-blast-profiling.html" rel="alternate"></link><published>2015-08-20T12:54:00+02:00</published><updated>2015-08-20T12:54:00+02:00</updated><author><name>Javier G. Sogo</name></author><id>tag:jgsogo.es,2015-08-20:/wordnet-blast-profiling.html</id><summary type="html">&lt;p&gt;&lt;a href="https://github.com/jardon-u/wordnet-blast"&gt;WordNet-blast&lt;/a&gt; es una biblioteca de C++ creada por
&lt;a href="http://logserv.free.fr/"&gt;Ugo Jardonnet&lt;/a&gt; para construir en memoria el gr√°fico de
&lt;a href="http://wordnet.princeton.edu/"&gt;WordNet&lt;/a&gt; y permitir un acceso r√°pido a los &lt;em&gt;synsets&lt;/em&gt; y sus
relaciones.&lt;/p&gt;
&lt;p&gt;Encontr√© esta librer√≠a buscando recursos ling√º√≠sticos para mi tesis de fin de m√°ster, en ella
necesitaba c√°lcular la distancia sem√°ntica entre ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://github.com/jardon-u/wordnet-blast"&gt;WordNet-blast&lt;/a&gt; es una biblioteca de C++ creada por
&lt;a href="http://logserv.free.fr/"&gt;Ugo Jardonnet&lt;/a&gt; para construir en memoria el gr√°fico de
&lt;a href="http://wordnet.princeton.edu/"&gt;WordNet&lt;/a&gt; y permitir un acceso r√°pido a los &lt;em&gt;synsets&lt;/em&gt; y sus
relaciones.&lt;/p&gt;
&lt;p&gt;Encontr√© esta librer√≠a buscando recursos ling√º√≠sticos para mi tesis de fin de m√°ster, en ella
necesitaba c√°lcular la distancia sem√°ntica entre conceptos y para ello utilizaba el grafo de WordNet,
as√≠ que esta librer√≠a, que utiliza la Boost Graph Library (BGL), resultaba perfecta para lo que
quer√≠a hacer.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NOTA.- En todo lo que se sigue hay que tener en cuenta que las pruebas se han realizado con Microsoft Visual Studio Premium 2013. Version 12.0.40418.00 Update 5 RC.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sin embargo, hab√≠a un &lt;strong&gt;problema&lt;/strong&gt;: el tiempo empleado en la construcci√≥n del grafo en memoria era
excesivo cuando se ejecutaba en &lt;em&gt;debug&lt;/em&gt; (hablo de minutos) lo que complicaba las tareas de depuraci√≥n.
As√≠ que aprovechando unos d√≠as de relax me he dedicado a darle un lavado de cara a la librer√≠a y a
tratar de acelerar la construcci√≥n del grafo en &lt;a href="https://github.com/jgsogo/wordnet-blast"&gt;mi repositorio&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sin embargo, no he sido capaz (a√∫n). Me he encontrado con un caballo de batalla contra el que no quiero
pelear: la funci√≥n &lt;code&gt;_Orphan_me&lt;/code&gt;, que, tal y como se ve en la imagen siguiente, supone m√°s del 90% del tiempo
de ejecuci√≥n de la aplicaci√≥n:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Profiling WordNet-blast" src="/images/wordnet-blast_profiling_1.png"&gt;&lt;/p&gt;
&lt;p&gt;Esta funci√≥n es llamada desde &lt;code&gt;boost::add_edge&lt;/code&gt; cuando se crea un nuevo arco en el grafo. es decir, cada
vez que a√±adimos una nueva relaci√≥n al grafo de WordNet que estamos construyendo en memoria:&lt;/p&gt;
&lt;p&gt;&lt;img alt="boost::add_edge" src="/images/wordnet-blast_profiling_2.png"&gt;&lt;/p&gt;
&lt;p&gt;Si buscamos el c√≥digo de la funci√≥n podemos ver que s√≥lo se ejecuta en caso de que la macro de preprocesador
&lt;code&gt;_ITERATOR_DEBUG_LEVEL&lt;/code&gt; valga 2. Es decir, que s√≥lo tenemos que preocuparnos si estamos compilando con
Microsoft y en debug (salvo que establezcamos este valor nosotros mismos) (&lt;strong&gt;NOTA&lt;/strong&gt; Esta macro se a√±ade en
Microsoft Visual Studio 2010).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;_Orphan_me&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;   &lt;span class="c1"&gt;// cut ties with parent&lt;/span&gt;
 &lt;span class="cp"&gt;#if _ITERATOR_DEBUG_LEVEL == 2&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_Myproxy&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;   &lt;span class="c1"&gt;// adopted, remove self from list&lt;/span&gt;
            &lt;span class="n"&gt;_Iterator_base12&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;_Pnext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;_Myproxy&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;_Myfirstiter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;_Pnext&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;_Pnext&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;_Pnext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;_Pnext&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;_Mynextiter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;_Pnext&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;_DEBUG_ERROR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ITERATOR LIST CORRUPTED!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;_Pnext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_Mynextiter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;_Myproxy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="cp"&gt;#endif &lt;/span&gt;&lt;span class="cm"&gt;/* _ITERATOR_DEBUG_LEVEL == 2 */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para m√°s informaci√≥n sobre &lt;code&gt;_ITERATOR_DEBUG_LEVEL&lt;/code&gt; puedes consultar esta
&lt;a href="https://msdn.microsoft.com/en-us/library/hh697468.aspx"&gt;documentaci√≥n de Microsoft&lt;/a&gt;, o este
&lt;a href="https://channel9.msdn.com/Series/C9-Lectures-Stephan-T-Lavavej-Advanced-STL/C9-Lectures-Stephan-T-Lavavej-Advanced-STL-3-of-n"&gt;v√≠deo de Stephan T. Lavavej&lt;/a&gt;:&lt;/p&gt;
&lt;iframe src="https://channel9.msdn.com/Series/C9-Lectures-Stephan-T-Lavavej-Advanced-STL/C9-Lectures-Stephan-T-Lavavej-Advanced-STL-3-of-n/player" width="640" height="360" allowFullScreen frameBorder="0"&gt;&lt;/iframe&gt;

&lt;h3&gt;Workaround&lt;/h3&gt;
&lt;p&gt;Entonces, ¬øqu√© podemos hacer? B√°sicamente eliminar todas las comprobaciones que se realizan por defecto
en debug (&lt;code&gt;_ITERATOR_DEBUG_LEVEL == 2&lt;/code&gt;) y cambiar el valor de esta macro. Debemos tener en cuenta que
al eliminar todas estas comprobaciones, en caso de error en el c√≥digo, tendremos un comportamiento indeterminado
en vez de la &lt;em&gt;amigable&lt;/em&gt; alerta &lt;em&gt;Debug Assertion&lt;/em&gt; que nos indica que algo ha ido mal y nos permite ir al punto
del c√≥digo donde ha sucedido.&lt;/p&gt;
&lt;p&gt;Como siempre, hay soluci√≥n/workaround, pero hay que tener muy presente cu√°les son las consecuencias (&lt;em&gt;side effects&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Seguimos trabajando en ello.&lt;/p&gt;</content><category term="C++"></category><category term="profiling"></category><category term="boost-graph-library"></category><category term="_ITERATOR_DEBUG_LEVEL"></category><category term="workaround"></category></entry><entry><title>Biicode (como empresa) detiene su andadura</title><link href="https://jgsogo.es/biicode-ends.html" rel="alternate"></link><published>2015-08-11T19:00:00+02:00</published><updated>2015-08-11T19:00:00+02:00</updated><author><name>Javier G. Sogo</name></author><id>tag:jgsogo.es,2015-08-11:/biicode-ends.html</id><summary type="html">&lt;p&gt;Hoy &lt;a class="reference external" href="https://twitter.com/diegorlosada"&gt;Diego&lt;/a&gt; ha publicado el &lt;a class="reference external" href="http://blog.biicode.com/biicode-just-the-company-post-mortem/"&gt;cese de actividad de Biicode&lt;/a&gt; como empresa. Y yo me quedo con una sensaci√≥n de vac√≠o y como pensativo.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="" src="https://jgsogo.es/images/biicode.png" /&gt;
&lt;/div&gt;
&lt;p&gt;Biicode &lt;strong&gt;cubre&lt;/strong&gt; un problema importante que no hemos sido capaces de abordar los programadores de C++ hasta ahora: la reutilizaci√≥n de c√≥digo. Somos muy malos reutilizando ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hoy &lt;a class="reference external" href="https://twitter.com/diegorlosada"&gt;Diego&lt;/a&gt; ha publicado el &lt;a class="reference external" href="http://blog.biicode.com/biicode-just-the-company-post-mortem/"&gt;cese de actividad de Biicode&lt;/a&gt; como empresa. Y yo me quedo con una sensaci√≥n de vac√≠o y como pensativo.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="" src="https://jgsogo.es/images/biicode.png" /&gt;
&lt;/div&gt;
&lt;p&gt;Biicode &lt;strong&gt;cubre&lt;/strong&gt; un problema importante que no hemos sido capaces de abordar los programadores de C++ hasta ahora: la reutilizaci√≥n de c√≥digo. Somos muy malos reutilizando el trabajo que han hecho otros. Yo mismo tengo que hacer un esfuerzo consciente importante para huir del copy/paste en favor de la creaci√≥n de librer√≠as, especialmente cuando se trata de peque√±as funcionalidades.&lt;/p&gt;
&lt;p&gt;Cuando empiezas a utilizar Linux quedas fascinado por la genialidad que es &lt;a class="reference external" href="https://es.wikipedia.org/wiki/Aptitude"&gt;aptitude&lt;/a&gt;, c√≥mo se instalan las cosas descarg√°ndose el c√≥digo fuente y compil√°ndose en tu ordenador reutilizando otras librer√≠as que ya tienes instaladas. Luego aprendes Python y conoces &lt;a class="reference external" href="https://pypi.python.org/pypi"&gt;Pypi&lt;/a&gt; y te convences de que algo as√≠ es necesario para que C++ sea un lenguaje de masas.&lt;/p&gt;
&lt;p&gt;A medida que vas aprendiendo cosas descubres &lt;a class="reference external" href="http://www.cmake.org/"&gt;CMake&lt;/a&gt;, y si eres perseverante terminas encontrando la funci√≥n &lt;a class="reference external" href="http://www.cmake.org/cmake/help/v3.0/module/ExternalProject.html"&gt;ExternalProject_Add&lt;/a&gt; y crear√°s &lt;a class="reference external" href="https://github.com/jgsogo/cmake/blob/master/jgsogo_install.txt"&gt;macros para gestionar con facilidad tus propios repositorios&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;---&lt;/p&gt;
&lt;p&gt;Y entonces conoces &lt;a class="reference external" href="https://www.biicode.com/"&gt;Biicode&lt;/a&gt;, un gestor de paquetes para C++, cuando a√∫n lo est√°n desarrollando y quiz√° terminando de definir el concepto. Y te enamoras de la idea. Y s√≥lo lamentas no haberla conocido antes.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Biicode. I'm your father" src="https://jgsogo.es/images/biicode_father.png" /&gt;
&lt;/div&gt;
&lt;p&gt;Te pones a utilizarla y encuentras ciertas dificultades, quiz√° m√°s porque pretendes hacer las cosas a tu manera en vez de adaptarte a su flujo de trabajo. Hablando con Diego te das cuenta de que est√° orientada a entornos de trabajo donde la plantilla no son programadores puros, sino a equipos donde la programaci√≥n es la herramienta para desarrollar proyectos, a &lt;em&gt;programadores&lt;/em&gt; industriales. √âse es el entorno donde Biicode pod√≠a entrar comercialmente, pero quiz√° un entorno reacio y sin cultura de reutilizaci√≥n (ni de programaci√≥n) suficiente como para identificar la necesidad.&lt;/p&gt;
&lt;p&gt;Para los programadores profesionales Biicode &lt;strong&gt;es&lt;/strong&gt; una herramienta estupenda para gestionar librer√≠as y dependencias, aunque he de confesar que yo tend√≠ m√°s a seguir utilizando CMake directamente que Biicode... quiz√° iban demasiado r√°pido en sus versiones (la √∫ltima vez que lo prob√© hab√≠a alg√∫n problema con &lt;a class="reference external" href="https://github.com/jgsogo/xml_parser"&gt;xml_parser&lt;/a&gt; y/o &lt;a class="reference external" href="https://github.com/jgsogo/txt_table"&gt;txt_table&lt;/a&gt; que prometo solucionar este a√±o que estar√© m√°s liberado), o quiz√° su p√∫blico objetivo en las redes sociales sobrepasaba mis conocimientos de programaci√≥n, o simplemente puede que mis intereses se orientaran √∫ltimamente m√°s hacia temas de Inteligencia Artificial que hacia temas puros de programaci√≥n.&lt;/p&gt;
&lt;p&gt;Sea como fuere, durante semanas he mantenido en la cabeza el pensamiento de &lt;em&gt;forzar&lt;/em&gt; un encuentro con Diego para preguntarle c√≥mo iba esa √∫ltima ronda de financiaci√≥n, y ya ves, lo vas dejando y dejando y terminas &lt;strong&gt;enter√°ndote por la prensa&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;---&lt;/p&gt;
&lt;p&gt;Quiero terminar agradeciendo a Diego su esfuerzo en el desarrollo de Biicode y por supuesto tambi√©n al resto de su equipo. &lt;strong&gt;¬°Conf√≠o en que el producto perviva!&lt;/strong&gt; Ya en lo personal, quiero resaltar la confianza y el tiempo que Diego me brind√≥, han supuesto para m√≠ un hito importante. &amp;#64;Diego, a√∫n sabiendo el desenlace, me hubiera gustado aceptar una oferta.&lt;/p&gt;
</content><category term="Friends"></category><category term="startup"></category><category term="diegorlosada"></category></entry><entry><title>Mejorar la correcci√≥n de textos producidos por OCR</title><link href="https://jgsogo.es/ocr-enhancement.html" rel="alternate"></link><published>2015-07-29T10:49:00+02:00</published><updated>2015-07-29T10:49:00+02:00</updated><author><name>Javier G. Sogo</name></author><id>tag:jgsogo.es,2015-07-29:/ocr-enhancement.html</id><summary type="html">&lt;p&gt;El lunes pasado Leticia planteaba si es posible &lt;a class="reference external" href="http://blog.leticiamfm.com/post/2015/07/24/Correctores-autom%C3%A1ticos-y-textos-producidos-por-OCR%3A-una-relaci%C3%B3n-que-no-funciona"&gt;mejorar la correcci√≥n autom√°tica de un texto producido por OCR&lt;/a&gt;,
y recapitulaba algunas de las &lt;em&gt;dificultades&lt;/em&gt; que se hab√≠a encontrado con m√°s frecuencia. Yo quiero dividirlas en
dos categor√≠as diferentes: las debidas al proceso de reconocimiento del OCR y las que est√°n ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;El lunes pasado Leticia planteaba si es posible &lt;a class="reference external" href="http://blog.leticiamfm.com/post/2015/07/24/Correctores-autom%C3%A1ticos-y-textos-producidos-por-OCR%3A-una-relaci%C3%B3n-que-no-funciona"&gt;mejorar la correcci√≥n autom√°tica de un texto producido por OCR&lt;/a&gt;,
y recapitulaba algunas de las &lt;em&gt;dificultades&lt;/em&gt; que se hab√≠a encontrado con m√°s frecuencia. Yo quiero dividirlas en
dos categor√≠as diferentes: las debidas al proceso de reconocimiento del OCR y las que est√°n relacionadas con las
sugerencias de correcci√≥n.&lt;/p&gt;
&lt;div class="section" id="errores-de-reconocimiento-de-caracteres"&gt;
&lt;h2&gt;Errores de reconocimiento de caracteres&lt;/h2&gt;
&lt;p&gt;El OCR (Reconocimiento √ìptico de Caracteres) es un proceso de identificaci√≥n autom√°tica de los caracteres
contenidos en una imagen que se plantea como un problema de reconocimiento de patrones (las propias letras).
En la bibliograf√≠a se considera un problema pr√°cticamente resuelto que ofrece gran precisi√≥n cuando
est√° entrenado adecuadamente; no obstante siempre hay alg√∫n error relacionado con la calidad de la imagen
original que provoca una identificaci√≥n incorrecta de algunas letras.&lt;/p&gt;
&lt;p&gt;Leticia muestra algunos ejemplos de este problema que reproduzco en dos im√°genes a continuaci√≥n.
En el primer caso la interpretaci√≥n incorrecta de una cadena de caracteres en favor de una
√∫nica letra visualmente muy semejante:&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="" src="https://jgsogo.es/images/nimbusaeta_ocr1.png" /&gt;
&lt;p class="caption"&gt;Interpretaci√≥n incorrecta de la secuencia de caracteres &lt;cite&gt;cl&lt;/cite&gt; y &lt;cite&gt;d&lt;/cite&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;En esta segunda imagen el OCR junta dos palabras en una, otro error relativamente habitual como consecuencia de los
diferentes espaciados entre las letras (&lt;em&gt;kerning&lt;/em&gt;) y entre palabras.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="" src="https://jgsogo.es/images/nimbusaeta_ocr2.png" /&gt;
&lt;p class="caption"&gt;Problemas del OCR con el espaciado entre caracteres.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Sin embargo estos no son los problemas de los que quer√≠a hablar aqu√≠.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="errores-asociados-a-las-sugerencias"&gt;
&lt;h2&gt;Errores asociados a las sugerencias&lt;/h2&gt;
&lt;p&gt;Mucho m√°s interesante me parece el segundo grupo de problemas, los relacionados con las sugerencias que ofrece
el editor de texto que utiliza (¬øMicrosoft Word?). Leticia ha reunido algunas caracter√≠sticas recurrentes:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;No tiene en cuenta secuencias de caracteres muy parecidas a la hora de ofrecer sugerencias.&lt;/li&gt;
&lt;li&gt;No ordena las sugerencias por frecuencia de uso.&lt;/li&gt;
&lt;li&gt;Nada de separar m√°s de dos palabras que han quedado juntas.&lt;/li&gt;
&lt;li&gt;Los guiones.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="ideas-first-round"&gt;
&lt;h2&gt;Ideas (first round)&lt;/h2&gt;
&lt;p&gt;Creo que los que est√°n relacionados con las sugerencias se pueden abordar desde la ling√º√≠stica computacional
con aproximaciones relativamente sencillas: una vez que se ha identificado una palabra mal deletreada (dejemos
que sea el corrector profesional el que identifique palabras fuera de sitio) tenemos que crear un sistema
que ofrezca sugerencias.&lt;/p&gt;
&lt;p&gt;Creo que se pueden combinar dos aproximaciones para construir este listado de sugerencias:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;strong&gt;distancia entre palabras&lt;/strong&gt;: un √≠ndice de tipo Jaccard letra a letra o, mejor a√∫n, en grupos de dos/tres
letras puede darnos una idea de qu√© palabras est√°n m√°s pr√≥ximas a qu√© otras. Construir una base de datos
con esta informaci√≥n podr√≠a resolver nuestro problema pr√°cticamente por si solo, pero tengo dudas sobre
la explosi√≥n combinatoria a la que se enfrentar√≠a una b√∫squeda de este tipo o la forma de construir
√≠ndices y el almacenamiento (¬øest√°s pensando en &lt;em&gt;buckets&lt;/em&gt;? ¬øC√≥mo lo har√≠as?).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;concordancia&lt;/strong&gt; (ahora dudo si se llama as√≠): estamos hablando de palabras incorrectas, pero tenemos su
contexto, ¬°aprovech√©moslo! Podemos construir una matriz de concordancia restringinda a bi-gramas de alg√∫n
corpus que tengamos y, a trav√©s de esta matriz podemos obtener un primer conjunto de candidatos ordenado
por frecuencia de uso.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;Los dos planteamientos anteriores pueden combinarse f√°cilmente para obtener un listado de sugerencias ordenadas
por proximidad a la palabra que est√° mal escrita y por frecuencia de uso. Si adem√°s inclu√≠mos un parseador
morfol√≥gico podemos identificar la categor√≠a gramatical de la palabra incorrecta para filtrar las sugerencias.&lt;/p&gt;
&lt;p&gt;¬øQu√© os parece? ¬øSeguimos con ello? ¬øSe os ocurre alguna otra idea? ¬øCre√©is que ser√≠a √∫til algo as√≠? Quien recoja
el guante que se pronuncie en los comentarios...&lt;/p&gt;
&lt;/div&gt;
</content><category term="Algorithms"></category><category term="notebook"></category><category term="lingwars"></category><category term="ocr"></category><category term="machine learning"></category></entry><entry><title>Mi primer paquete en PyPI</title><link href="https://jgsogo.es/first-package-pypi.html" rel="alternate"></link><published>2015-07-29T10:20:00+02:00</published><updated>2015-07-29T10:20:00+02:00</updated><author><name>Javier G. Sogo</name></author><id>tag:jgsogo.es,2015-07-29:/first-package-pypi.html</id><summary type="html">&lt;p&gt;Nadie tiene dudas de que &lt;a href="https://pypi.python.org/pypi"&gt;PyPI&lt;/a&gt; es una de las joyas de Python, el simple hecho
de tener a tu alcance infinitud de librer√≠as con s√≥lo escribir &lt;code&gt;pip install library&lt;/code&gt; lo convierte en una
herramienta tremendamente √∫til y probablemente sea una de las razones del √©xito de Python entre los ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;Nadie tiene dudas de que &lt;a href="https://pypi.python.org/pypi"&gt;PyPI&lt;/a&gt; es una de las joyas de Python, el simple hecho
de tener a tu alcance infinitud de librer√≠as con s√≥lo escribir &lt;code&gt;pip install library&lt;/code&gt; lo convierte en una
herramienta tremendamente √∫til y probablemente sea una de las razones del √©xito de Python entre los que
empiezan a programar.&lt;/p&gt;
&lt;p&gt;As√≠ que para el proyecto que estamos lanzando, &lt;a href="http://lingwars.github.io/blog/"&gt;Ling·∫Öars&lt;/a&gt;,
donde participa gente con poca experiencia
en programaci√≥n resulta pr√°cticamente necesario enpaquetar el c√≥digo que vamos a utilizar y subirlo al
gestor de paquetes para que puedan empezar a ejecutar ejemplos desde el primer d√≠a.&lt;/p&gt;
&lt;p&gt;Con este objetivo he creado el paquete &lt;code&gt;apicultur&lt;/code&gt; (&lt;a href="https://pypi.python.org/pypi/apicultur"&gt;PyPI&lt;/a&gt;,
&lt;a href="https://github.com/jgsogo/apicultur-python"&gt;source&lt;/a&gt;) para acceder a las APIs ling√º√≠sticas de
&lt;a href="https://apicultur.io/"&gt;Apicultur&lt;/a&gt;. Por supuesto, te lo puedes instalar escribiendo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;   pip install apicultur
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Este &lt;em&gt;tutorial&lt;/em&gt; est√° inspirado en estos posts de &lt;a href="https://tom-christie.github.io/articles/pypi/"&gt;Tom Christie&lt;/a&gt;,
&lt;a href="https://jamie.curle.io/posts/my-first-experience-adding-package-pypi/"&gt;Jamie Curle&lt;/a&gt; y la documentaci√≥n de la
propia &lt;a href="https://packaging.python.org/en/latest/distributing.html"&gt;Python Foundation&lt;/a&gt;; cualquier duda que te
surja seguro que est√° resuelta ah√≠, yo s√≥lo intentar√© ser breve e ir a lo imprescindible.&lt;/p&gt;
&lt;h2&gt;Estructura m√≠nima&lt;/h2&gt;
&lt;p&gt;Para poder empaquetar una librer√≠a necesitamos como m√≠nimo la siguiente estructura de archivos:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;DIRECTORIO-DEL-PROYECTO&lt;/span&gt;
&lt;span class="err"&gt;‚îú‚îÄ‚îÄ setup.py&lt;/span&gt;
&lt;span class="err"&gt;‚îú‚îÄ‚îÄ NOMBRE-DEL-PAQUETE&lt;/span&gt;
&lt;span class="err"&gt;     ‚îú‚îÄ‚îÄ __init__.py&lt;/span&gt;
&lt;span class="err"&gt;     ‚îú‚îÄ‚îÄ FILE1.py&lt;/span&gt;
&lt;span class="err"&gt;     ‚îú‚îÄ‚îÄ FILE2.py&lt;/span&gt;
&lt;span class="err"&gt;     ‚îî‚îÄ‚îÄ MODULE (OPCIONAL)&lt;/span&gt;
&lt;span class="err"&gt;           ‚îú‚îÄ‚îÄ __init__.py&lt;/span&gt;
&lt;span class="err"&gt;           ‚îî‚îÄ‚îÄ MOREFILES.py&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Vamos a ver qu√© significan los elementos anteriores:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;el DIRECTORIO-DEL-PROYECTO puede ser cualquiera, no afecta en absoluto, lo que cuenta es lo que hay dentro.&lt;/li&gt;
&lt;li&gt;NOMBRE-DEL-PAQUETE tiene que ser el nombre del paquete, si el nombre es &lt;code&gt;apicultur&lt;/code&gt;, este directorio tiene
   que llamarse tambi√©n &lt;code&gt;apicultur&lt;/code&gt;. Y esto es as√≠. Dentro estar√°n todos los archivos que forman la librer√≠a.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setup.py&lt;/code&gt;: es el archivo donde se define el paquete, el formato es el mismo para &lt;code&gt;setuptools&lt;/code&gt; y para
   &lt;code&gt;distutils&lt;/code&gt; as√≠ que no hay que preocuparse por nada m√°s. Lo vemos a continuaci√≥n.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;setup.py&lt;/h2&gt;
&lt;p&gt;Este archivo, con toda la informaci√≥n del paquete, tiene que tener un contenido parecido al siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;setuptools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;find_packages&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;

    &lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;NOMBRE-DEL-PAQUETE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;0.1.10&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;A sample Python project&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;long_description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;More information about the sample project&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://github.com/whatever/whatever&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;yourname&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;author_email&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;your@address.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

        &lt;span class="n"&gt;license&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;MIT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

        &lt;span class="c1"&gt;# See https://PyPI.python.org/PyPI?%3Aaction=list_classifiers&lt;/span&gt;
        &lt;span class="n"&gt;classifiers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="c1"&gt;# How mature is this project? Common values are&lt;/span&gt;
            &lt;span class="c1"&gt;#   3 - Alpha&lt;/span&gt;
            &lt;span class="c1"&gt;#   4 - Beta&lt;/span&gt;
            &lt;span class="c1"&gt;#   5 - Production/Stable&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;Development Status :: 4 - Beta&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

            &lt;span class="c1"&gt;# Indicate who your project is intended for&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;Intended Audience :: Developers&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;Topic :: Software Development :: Libraries&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

            &lt;span class="c1"&gt;# Pick your license as you wish (should match &amp;quot;license&amp;quot; above)&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;License :: OSI Approved :: MIT License&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

            &lt;span class="s1"&gt;&amp;#39;Operating System :: OS Independent&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

            &lt;span class="c1"&gt;# Specify the Python versions you support here. In particular, ensure&lt;/span&gt;
            &lt;span class="c1"&gt;# that you indicate whether you support Python 2, Python 3 or both.&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;Programming Language :: Python&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;Programming Language :: Python :: 2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;Programming Language :: Python :: 2.6&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;Programming Language :: Python :: 2.7&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;Programming Language :: Python :: 3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;Programming Language :: Python :: 3.2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;Programming Language :: Python :: 3.3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;Programming Language :: Python :: 3.4&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt;

        &lt;span class="n"&gt;keywords&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sample setup&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;find_packages&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
        &lt;span class="n"&gt;install_requires&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;requests&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;more-deps&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,],&lt;/span&gt;  &lt;span class="c1"&gt;#&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Subiendo el c√≥digo a PyPI&lt;/h2&gt;
&lt;p&gt;Verifica primero que el archivo es correcto:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;   $ python setup.py &lt;span class="nb"&gt;test&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Y ahora ya puedes generar los archivos que van a distribuirse en PyPI:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;   $ python setup.py sdist
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Este comando crea un archivo comprimido con todos lo que va a subirse al gestor de paquetes PyPI, este
archivo se guarda en un directorio &lt;code&gt;dist/&lt;/code&gt; que habr√° sido creado en el directorio de tu proyecto (si est√°s utilizando
un gestor de versiones acu√©rdate de a√±adir este directorio a los archivos ignorados).&lt;/p&gt;
&lt;p&gt;Vas a necesitar un usuario en PyPI para poder subir el paquete; una vez que lo tengas puedes registrar el
paquete utilizando el formulario que hay en la web o bien directamente con&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    $ python setup.py register
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Este registro s√≥lo lo tendr√°s que realizar una vez.&lt;/p&gt;
&lt;p&gt;Una vez que el paquete est√° registrado puede subir cada nueva versi√≥n (tambi√©n la primera) utlizando &lt;code&gt;twine&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    $ pip install twine
    $ twine upload dist/NOMBRE-DEL-PAQUETE-VERSION.tar.gz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Y ya est√° listo para ser utilizado.&lt;/p&gt;
&lt;h2&gt;Otras recomendaciones&lt;/h2&gt;
&lt;p&gt;En este tutorial hemos ido a lo imprescindible, pero para que un paquete sea realmente reutilizable y que
su mantenimiento no resulte una tarea tit√°nica es muy recomendable seguir tambi√©n otras recomendaciones:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Escribe tests.&lt;/li&gt;
&lt;li&gt;Usa alg√∫n sistema de integraci√≥n continua que ejecute esos tests autom√°ticamente.&lt;/li&gt;
&lt;li&gt;¬°Documenta!&lt;/li&gt;
&lt;li&gt;¬°Y mant√©n la documentaci√≥n actualizada!&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;Enlaces de inter√©s&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Reutilizaci√≥n de c√≥digo en C++: hecha un vistazo a &lt;a href="https://www.biicode.com/"&gt;BiiCode&lt;/a&gt; ;D&lt;/li&gt;
&lt;/ul&gt;</content><category term="Python"></category><category term="pypi"></category><category term="apicultur"></category></entry><entry><title>Clustering -- presentaci√≥n en h4ckademy</title><link href="https://jgsogo.es/h4ckademy-clustering-talk.html" rel="alternate"></link><published>2015-03-17T13:34:00+01:00</published><updated>2015-03-17T13:34:00+01:00</updated><author><name>Javier G. Sogo</name></author><id>tag:jgsogo.es,2015-03-17:/h4ckademy-clustering-talk.html</id><summary type="html">&lt;p&gt;El otro d√≠a os presentaba &lt;a href="https://jgsogo.es/h4ckademy.html"&gt;h4ckademy&lt;/a&gt;, la escuela de programaci√≥n
de mi amigo Israel Guti√©rrez (&lt;a href="https://twitter.com/gootyfer"&gt;@gootyfer&lt;/a&gt;). Despu√©s de visitarla ese d√≠a decid√≠ que pod√≠a
ser una buena oportunidad para salir de mi zona de confort y ofrecer a los &lt;em&gt;alumnos&lt;/em&gt; una breve &lt;em&gt;clase&lt;/em&gt;
como introducci√≥n al clustering (clasificaci√≥n no supervisada ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;El otro d√≠a os presentaba &lt;a href="https://jgsogo.es/h4ckademy.html"&gt;h4ckademy&lt;/a&gt;, la escuela de programaci√≥n
de mi amigo Israel Guti√©rrez (&lt;a href="https://twitter.com/gootyfer"&gt;@gootyfer&lt;/a&gt;). Despu√©s de visitarla ese d√≠a decid√≠ que pod√≠a
ser una buena oportunidad para salir de mi zona de confort y ofrecer a los &lt;em&gt;alumnos&lt;/em&gt; una breve &lt;em&gt;clase&lt;/em&gt;
como introducci√≥n al clustering (clasificaci√≥n no supervisada).&lt;/p&gt;
&lt;p&gt;Hoy ha llegado la hora, es el momento de enfrentarse a la realidad. Para la charla me he preparado dos
presentaciones, espero que no sean muy densas, pero es que tampoco ten√≠a nada claro cu√°l es el nivel
de la gente ni qu√© esperan de m√≠, as√≠ que espero no haber metido la pata. Conf√≠o en sembrar algunas
inquietudes, algunas ideas fundamentales acerca de esta t√©cnica que les permita evaluar los resultados
con mejor criterio la pr√≥xima vez que la ejecuten.&lt;/p&gt;
&lt;p&gt;En los siguientes enlaces pod√©is encontrar las transparencias de ambas presentaciones:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jgsogo.es/pdfs/clustering.pdf"&gt;Clustering&lt;/a&gt; es una introducci√≥n al clustering y las principales consideraciones
   a tener en cuenta cuando uno se enfrenta a √©l: medidas de distancia, outliers, intepretaci√≥n de resultados,...&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jgsogo.es/pdfs/algoritmo.pdf"&gt;Algoritmos&lt;/a&gt; de clustering: k-means, BRF y CURE. Una muestra de tres algoritmos
   con caracter√≠sticas muy distintas que permiten aproximarse al clustering desde diferentes puntos de vista.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Las presentaciones &lt;strong&gt;no son definitivas&lt;/strong&gt;, faltan algunas cosas fundamentales como la referencias bibliogr√°ficas, 
pero ya las ir√© incluyendo poco a poco a medida que yo mismo vaya trabajando en el tema. De todas formas, pod√©is
seguir su evoluci√≥n en &lt;a href="https://github.com/jgsogo/talks" title="Github - jgsogo - talks"&gt;este repositorio&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;... A ver qu√© tal se me da hoy, ya os contar√© ;D&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Informaci√≥n complementaria:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://elvex.ugr.es/idbis/dm/slides/43%20Clustering%20-%20Density.pdf"&gt;DECSAI - Clustering basado en densidad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.stuartreid.co.za/clustering-countries-real-gdp-growth-part2/"&gt;Monte Carlo K-Means clustering of Countries with Python (Part 2/3)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;refs de Coursera, MUIA,...&lt;/li&gt;
&lt;/ul&gt;</content><category term="Bio"></category><category term="h4ckademy"></category><category term="talk"></category></entry><entry><title>H4ckademy</title><link href="https://jgsogo.es/h4ckademy.html" rel="alternate"></link><published>2015-03-06T10:49:00+01:00</published><updated>2015-03-06T10:49:00+01:00</updated><author><name>Javier G. Sogo</name></author><id>tag:jgsogo.es,2015-03-06:/h4ckademy.html</id><summary type="html">&lt;p&gt;&lt;a href="http://www.h4ckademy.com/"&gt;H4ckademy&lt;/a&gt; es un proyecto que dirige mi amigo Israel (&lt;a href="https://twitter.com/gootyfer"&gt;@gootyfer&lt;/a&gt;).
Se trata de un concepto de &lt;em&gt;academia de programaci√≥n&lt;/em&gt; innovador: los candidatos deben pasar un proceso de selecci√≥n
para incorporarse al programa y durante este colaborar√°n entre ellos para aprender y desarrollar proyectos propuestos
 por ellos mismos o por alguna ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://www.h4ckademy.com/"&gt;H4ckademy&lt;/a&gt; es un proyecto que dirige mi amigo Israel (&lt;a href="https://twitter.com/gootyfer"&gt;@gootyfer&lt;/a&gt;).
Se trata de un concepto de &lt;em&gt;academia de programaci√≥n&lt;/em&gt; innovador: los candidatos deben pasar un proceso de selecci√≥n
para incorporarse al programa y durante este colaborar√°n entre ellos para aprender y desarrollar proyectos propuestos
 por ellos mismos o por alguna empresa externa que se compromete a ofrecer &lt;em&gt;mentoring&lt;/em&gt; durante su desarrollo.&lt;/p&gt;
&lt;p&gt;&lt;img alt="h4ckademy" src="/images/h4ckademy.png"&gt;&lt;/p&gt;
&lt;p&gt;La idea me parece muy interesante, los &lt;em&gt;alumnos&lt;/em&gt; pueden empezar a construir de esta forma su red de contactos y potenciar
 su perfil p√∫blico en la red con proyectos de c√≥digo que pueden despertar el inter√©s de las empresas.
Incluso podemos considerar que aquellos que est√°n haciendo el proyecto de la mano de alguna empresa est√°n metidos
realmente en un proceso de selecci√≥n de varias semanas que puede terminar con su incorporaci√≥n al mundo laboral.&lt;/p&gt;
&lt;p&gt;Creo que esta iniciativa manifiesta la nueva forma de buscar trabajo que se est√° constituyendo
durante los √∫ltimos a√±os.
Es la alternativa al autoempleo y al becario, una manera interesante de darse a conocer
con hechos, con repositorios de c√≥digo, con le√±a en vez de humo, y en &lt;strong&gt;h4ckademy&lt;/strong&gt; tienen le√±a de encina ;D&lt;/p&gt;
&lt;p&gt;Si te llama la atenci√≥n, no lo dudes, &lt;a href="http://www.h4ckademy.com/form.html"&gt;ap√∫ntate en su web&lt;/a&gt;... aunque para hacerlo tendr√°s que
resolver el primer reto que te proponen.&lt;/p&gt;</content><category term="Friends"></category><category term="h4ckademy"></category><category term="gootyfer"></category></entry></feed>